@article{6ccae79a331ac124a2333bedb5e330a534a53d77,
title = {A Human Error Based Approach to Understanding Programmer-Induced Software Vulnerabilities},
year = {2020},
url = {https://www.semanticscholar.org/paper/6ccae79a331ac124a2333bedb5e330a534a53d77},
abstract = {Many security incidents can be traced back to software vulnerabilities, which can be described as security-related defects/bugs in the code that can potentially be exploited by the attackers to perform unauthorized actions. An analysis of vulnerability data disseminated by organizations such as NIST’ s National Vulnerability (NVD) and SANS Institute shows that a majority of vulnerabilities can be traced back to a relatively small set of root causes mostly related to the repeated mistakes by the programmers. That is, programmers exhibit a pattern of erroneous coding practices or behavior which lead to vulnerable code. Cognitive Psychologists have long been studying these erroneous behavior patterns and have termed them as human cognition failures or simply, human errors. The primary goal of this paper is to propose a classification for the most frequently observed human errors committed by the programmers (the commitment of a human error can lead to injection of one or more security defects/bugs). Such a classification can be useful for software development organizations as they can train developers on the human errors so that developers can avoid committing the human errors themselves, thereby reducing the chances of vulnerability injection in their code.},
author = {Vaibhav Anu and Kazi Zakia Sultana and Bharath K. Samanthula},
doi = {10.1109/ISSREW51248.2020.00036},
}

@article{70824eba2ff8c76b132dab6251a8558a1c7524a9,
title = {An Ethnographic Understanding of Software (In)Security and a Co-Creation Model to Improve Secure Software Development},
year = {2020},
url = {https://www.semanticscholar.org/paper/70824eba2ff8c76b132dab6251a8558a1c7524a9},
abstract = {We present an ethnographic study of secure software development processes in a software company using the anthropological research method of participant observation. Two PhD students in computer science trained in qualitative methods were embedded in a software company for 1.5 years of total research time. The researchers participated in everyday work activities such as coding and meetings, and observed software (in)security phenomena both through investigating historical data (code repositories and ticketing system records), and through pen-testing the developed software and observing developers’ and management’s reactions to the discovered vulnerabilities. Our study found that 1) security vulnerabilities are sometimes intentionally introduced and/or overlooked due to the difficulty in managing the various stakeholders’ responsibilities in an economic ecosystem, and cannot be simply blamed on developers’ lack of knowledge or skills; 2) accidental vulnerabilities discovered in the pen-testing process produce different reactions in the development team, often times contrary to what a security researcher would predict. These findings highlight the nuanced nature of the root causes of software vulnerabilities and indicate the need to take into account a significant amount of contextual information to understand how and why software vulnerabilities emerge during software development. Rather than simply addressing deficits in developer knowledge or practice, this research sheds light on at times forgotten human factors that significantly impact the security of software developed by actual companies. Our analysis also shows that improving software security in the * Both are first authors. Names are ordered alphabetically. Copyright is held by the author/owner. Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee. USENIX Symposium on Usable Privacy and Security (SOUPS) 2020. August 9–11, 2020, Virtual Conference. development process can benefit from a co-creation model, where security experts work side by side with software developers to better identify security concerns and provide tools that are readily applicable within the specific context of the software development workflow.},
author = {Hernan M. Palombo and Armin Ziaie Tabari and Daniel Lende and Jay Ligatti and Xinming Ou},
}

@article{7fca463611359423f35070aca100afd27dca76c5,
title = {Using a Cognitive Psychology Perspective on Errors to Improve Requirements Quality: An Empirical Investigation},
year = {2016},
url = {https://www.semanticscholar.org/paper/7fca463611359423f35070aca100afd27dca76c5},
abstract = {Software inspections are an effective method for early detection of faults present in software development artifacts (e.g., requirements and design documents). However, many faults are left undetected due to the lack of focus on the underlying sources of faults (i.e., what caused the injection of the fault?). To address this problem, research work done by Psychologists on analyzing the failures of human cognition (i.e., human errors) is being used in this research to help inspectors detect errors and corresponding faults (manifestations of errors) in requirements documents. We hypothesize that the fault detection performance will demonstrate significant gains when using a formal taxonomy of human errors (the underlying source of faults). This paper describes a newly developed Human Error Taxonomy (HET) and a formal Error-Abstraction and Inspection (EAI) process to improve fault detection performance of inspectors during the requirements inspection. A controlled empirical study evaluated the usefulness of HET and EAI compared to fault based inspection. The results verify our hypothesis and provide useful insights into commonly occurring human errors that contributed to requirement faults along with areas to further refine both the HET and the EAI process.},
author = {Vaibhav Anu and G. Walia and Wenhua Hu and Jeffrey C. Carver and Gary L. Bradshaw},
journal = {2016 IEEE 27th International Symposium on Software Reliability Engineering (ISSRE)},
volume = {},
pages = {65-76},
doi = {10.1109/ISSRE.2016.41},
}

@article{618e718f9aee56298fdc9641d20b3b42ce5f5dea,
title = {An Analysis of the Role of Situated Learning in Starting a Security Culture in a Software Company},
year = {2021},
url = {https://www.semanticscholar.org/paper/618e718f9aee56298fdc9641d20b3b42ce5f5dea},
abstract = {We conducted an ethnographic study of a software development company to explore if and how a development team adopts security practices into the development lifecycle. A PhD student in computer science with prior training in qualitative research methods was embedded in the company for eight months. The researcher joined the company as a software engineer and participated in all development activities as a new hire would, while also making observations on the development practices. During the fieldwork, we observed a positive shift in the development team’s practices regarding secure development. Our analysis of data indicates that the shift can be attributed to enabling all software engineers to see how security knowledge could be applied to the specific software products they worked on. We also observed that by working with other developers to apply security knowledge under the concrete context where the software products were built, developers who possessed security expertise and wanted to push for more secure development practices (security advocates) could be effective in achieving this goal. Our data point to an interactive learning process where software engineers in a development team acquire knowledge, apply it in practice, and contribute to the team, leading to the creation of a set of preferred practices, or “culture” of the team. This learning process can be understood through the lens of the situated learning framework, where it is recognized that knowledge transfer happens within a community of practice, and applying the knowledge is the key in individuals (software engineers) acquiring it and the community (development team) embodying such knowledge in its practice. Our data Copyright is held by the author/owner. Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee. USENIX Symposium on Usable Privacy and Security (SOUPS) 2021. August 8–10, 2021, Virtual Conference. show that enabling a situated learning environment for security gives rise to security-aware software engineers. We discuss the roles of management and security advocates in driving the learning process to start a security culture in a software company.},
author = {Anwesh Tuladhar and Daniel Lende and Jay Ligatti and Xinming Ou},
}

@article{edae560fb7e18d2a410240675acf19a5ac3f32ee,
title = {Evaluation of Static Web Vulnerability Analysis Tools},
year = {2018},
url = {https://www.semanticscholar.org/paper/edae560fb7e18d2a410240675acf19a5ac3f32ee},
abstract = {In the recent years many web applications of different kinds has grown significanlty all over the world. Unfortunately on the other hand, there is an increase in the number of attacks on these applications. Hence, security against web application vulnerabilities become necessary. However, checking all web vulnerabilities manually is tedious and needs much effort and skills. So the use of web application vulnerability scanners becomes necessary. Many static and dynamic, open source and commercial vulnerability analysis tools are available. In this paper, we evaluate two open source, static web application vulnerability analyses tools, OWASP WAP and RIPS using the deliberately vulnerable web application. These are Damn Vulnerable Web Application (DVWA) and A Buggy Web Application (bWAPP). OWASP WAP and RIPS tools are selected as they are open source static tools WAP is recommended by OWASP and RIPS provide commercial versions as well. We used deliberately vulnerable web applications so that the vulnerabilities detected could be easily analyzed whether they are true positive or false positive. We found that OWASP WAP give better results over RIPS in our experimental scenario.},
author = {Shobha Tyagi and Krishan Kumar},
journal = {2018 Fifth International Conference on Parallel, Distributed and Grid Computing (PDGC)},
volume = {},
pages = {1-6},
doi = {10.1109/PDGC.2018.8745996},
}

@article{26e46ca02d4bacbca3dabd643d3e522bb6129c31,
title = {Training Industry Practitioners to Investigate the Human Error Causes of Requirements Faults},
year = {2018},
url = {https://www.semanticscholar.org/paper/26e46ca02d4bacbca3dabd643d3e522bb6129c31},
abstract = {This paper reports an industrial study that was conducted to evaluate whether human error training procedures and instrumentation created by authors can be used to train industry software practitioners on human errors that occur during requirements engineering process. Industry practitioners were trained (using an on-line audio-visual package) to analyze requirements faults and map them to underlying human errors (i.e., the root causes of faults). Results of the study show that even though our training helped practitioners in gaining knowledge about requirements phase human errors, parts of the training procedures need to be improved. Additionally, practitioners also reported mechanisms to prevent human errors from happening during the requirements engineering process. These mechanisms can help organizations create interventions (like checklists) that can help software developers avoid committing human errors, thereby preventing faults that are caused due to these errors.},
author = {K. Manjunath and Vaibhav Anu and G. Walia and Gary L. Bradshaw},
journal = {2018 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW)},
volume = {},
pages = {53-58},
doi = {10.1109/ISSREW.2018.00-31},
}

@article{74239ba066a7ceaf5fc499e4cce848f47c3d3373,
title = {Understanding Human Errors to Improve Requirements Quality},
year = {2018},
url = {https://www.semanticscholar.org/paper/74239ba066a7ceaf5fc499e4cce848f47c3d3373},
abstract = {},
author = {K. Manjunath},
}

@article{ec8346167b77106fbbc426bb5835464a9d03438b,
title = {Incorporating Human Error Education into Software Engineering Courses via Error-based Inspections},
year = {2017},
url = {https://www.semanticscholar.org/paper/ec8346167b77106fbbc426bb5835464a9d03438b},
abstract = {In spite of the human-centric aspect of software engineering (SE) discipline, human error knowledge has been ignored by SE educators as it is often thought of as something that belongs in the realm of Psychology. SE curriculum is also severely devoid of educational content on human errors, while other human-centric disciplines (aviation, medicine, process control) have developed human error training and other interventions. To evaluate the feasibility of using such interventions to teach students about human errors in SE, this paper describes an exploratory study to evaluate whether requirements inspections driven by human errors can be used to deliver both requirements validation knowledge (a key industry skill) and human error knowledge to students. The results suggest that human error based inspections can enhance the fault detection abilities of students, a primary learning outcome of inspection exercises conducted in software engineering courses. Additionally, results showed that students found human error information useful for understanding the underlying causes of requirement faults.},
author = {Vaibhav Anu and G. Walia and Gary L. Bradshaw},
journal = {Proceedings of the 2017 ACM SIGCSE Technical Symposium on Computer Science Education},
volume = {},
pages = {},
doi = {10.1145/3017680.3017782},
}

@article{9b132f5660e8366e372708b5de8da083cab75b4f,
title = {OWASP O2 Platform - Open Platform for Automating Application Security Knowledge and Workflows},
year = {2009},
url = {https://www.semanticscholar.org/paper/9b132f5660e8366e372708b5de8da083cab75b4f},
abstract = {In this talk Dinis Cruz will show the OWASP O2 Platform, which is an open source toolkit specifically, designed for developers and security consultants to be able to perform quick, effective and thorough ’source-code-driven’ application security reviews. The OWASP O2 Platform (http://www.owasp.org/index.php/OWASP_O2_Platform) consumes results from the scanning engines from Ounce Labs, Microsoft’s CAT.NET tool, FindBugs, CodeCrawler and AppScan DE, and also provides limited support for Fortify and OWASP WebScarab dumps. In the past, there has been a very healthy skepticism on the usability of Source Code analysis engines to find commonly found vulnerablities in real world applications. This presentation will show that with some creative and powerful tools, it IS possible to use O2 to discover those issues. This presentation will also show O2’s advanced support for Struts and Spring MVC.},
author = {D.V. Cruz},
doi = {10.1007/978-3-642-16120-9_3},
}

@article{3d847c3b3f62e287d05500f3d28367131fbde0c4,
title = {Developing and Evaluating Learning Materials to Introduce Human Error Concepts in Software Engineering Courses: Results from Industry and Academia},
year = {2019},
url = {https://www.semanticscholar.org/paper/3d847c3b3f62e287d05500f3d28367131fbde0c4},
abstract = {[Background]: This Research Category Full Paper presents the results of authors’ efforts to develop and evaluate learning materials for introducing Software Engineering (SE) students to the Cognitive Psychology concept of human errors (specifically to those human errors that occur during software development). During the last few years, the authors have developed, through a rigorous literature review and empirical investigation, human error intervention instrumentation and supporting training/teaching material. The intervention instrument consists of a corpus of human errors and a tool to support human error based software requirements inspections. The primary aim of developing this instrumentation and training material is to impart SE/CS students with the knowledge about the most frequently committed human errors during the software development process. [Goal and Method]: First, a study was conducted with Industry Practitioners with the goal of examining if the practitioners believed that human errors and human error training are useful and relevant to the software development process. Next, based on feedback from the practitioners, a study was conducted in an undergraduate Software Engineering course where students were trained using the human error instrument and were asked to perform error based requirements inspections. The high-level goal of this paper is to evaluate whether requirements inspections supported by human errors can be used to deliver knowledge about software engineering human errors as well as knowledge about requirements inspections (a key industry skill) to students. [Results]: Results showed that industry practitioners found the human error instrumentation and training useful. Based on their feedback, when the training was administered to students, it helped students understand those human errors that are the frequently committed during the software development process.},
author = {Vaibhav Anu and G. Walia and Gary L. Bradshaw and Mohammad Alqudah},
journal = {2019 IEEE Frontiers in Education Conference (FIE)},
volume = {},
pages = {1-9},
doi = {10.1109/FIE43999.2019.9028461},
}

@article{4937c99de23f8b70eb28795d1710c4e9dfc06684,
title = {Issues and Opportunities for Human Error-Based Requirements Inspections: An Exploratory Study},
year = {2017},
url = {https://www.semanticscholar.org/paper/4937c99de23f8b70eb28795d1710c4e9dfc06684},
abstract = {[Background] Software inspections are extensively used for requirements verification. Our research uses the perspective of human cognitive failures (i.e., human errors) to improve the fault detection effectiveness of traditional fault-checklist based inspections. Our previous evaluations of a formal human error based inspection technique called Error Abstraction and Inspection (EAI) have shown encouraging results, but have also highlighted a real need for improvement. [Aims and Method] The goal of conducting the controlled study presented in this paper was to identify the specific tasks of EAI that inspectors find most difficult to perform and the strategies that successful inspectors use when performing the tasks. [Results] The results highlighted specific pain points of EAI that can be addressed by improving the training and instrumentation.},
author = {Vaibhav Anu and G. Walia and Wenhua Hu and Jeffrey C. Carver and Gary L. Bradshaw},
journal = {2017 ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM)},
volume = {},
pages = {460-465},
doi = {10.1109/ESEM.2017.62},
}

@article{33d2b939fd60f8abd31eb61978285bf9f90d4337,
title = {Penetration test: A case study on remote command execution security hole},
year = {2010},
url = {https://www.semanticscholar.org/paper/33d2b939fd60f8abd31eb61978285bf9f90d4337},
abstract = {This paper offers a fresh perspective on the aspect of application security, highlighting a sample attack that is not currently being protected against. Here is a case study which discussed identifying poor coding practices that render Web applications vulnerable to attacks such as remote command execution. Given the increased focus on the need for application security, it is now to be hoped that the issue will receive greater attention in new software releases. In this research a case study is discussed on the basilic software which has a great usability in the publication and educational web sites in Europe. Although this is a useful software, the research identified some security holes on the application and offers a proof on vulnerability of the software and a solution for this problem is explained.},
author = {S. Mohammadi and Soulmaz Pourdavar},
journal = {2010 Fifth International Conference on Digital Information Management (ICDIM)},
volume = {},
pages = {412-416},
doi = {10.1109/ICDIM.2010.5664671},
}

@article{76cf12d490cf522ba7bb463ef1db9f1e20bdfecd,
title = {Using human error information for error prevention},
year = {2018},
url = {https://www.semanticscholar.org/paper/76cf12d490cf522ba7bb463ef1db9f1e20bdfecd},
abstract = {Developing error-free software requirements is of critical importance to the success of a software project. Problems that occur during requirements collection and specification, if not fixed early, are costly to fix later. Therefore, it is important to develop techniques that help requirements engineers detect and prevent requirements problems. As a human-centric activity, requirements engineering can be influenced by psychological research about human errors, which are the failings of human cognition during the process of planning and executinge a task. We have employed human error research to describe the types of problems that occur during requirements engineering. The goals of this research are: (1) to evaluate whether understanding human errors contributes to the prevention of errors and concomitant faults during requirements engineering and (2) to identify error prevention techniques used in industrial practice. We conducted a controlled classroom experiment to evaluate the benefits that knowledge of errors has on error prevention. We then analyzed data from two industrial surveys to identify specific prevention and mitigation approaches employed in practice. The classroom study showed that the better a requirements engineer understands human errors, the fewer errors and concomitant faults that engineer makes when developing a new requirements document. Furthermore, different types of Human Errors have different impacts on fault prevention. The industry study results identified prevention and mitigation mechanisms for each error type. Human error information is useful for fault prevention during requirements engineering. There are practices that requirements engineers can employ to prevent or mitigate specific human errors.},
author = {Wenhua Hu and Jeffrey C. Carver and Vaibhav Anu and G. Walia and Gary L. Bradshaw},
journal = {Empirical Software Engineering},
volume = {23},
pages = {3768-3800},
doi = {10.1007/s10664-018-9623-8},
}

@article{68cbcf5844814ef4dda580bea2c77bb8a5314140,
title = {A New Mechanism for Trusted Code Remote Execution},
year = {2007},
url = {https://www.semanticscholar.org/paper/68cbcf5844814ef4dda580bea2c77bb8a5314140},
abstract = {Current authentication model in collaboration computing use entity's identity to establish trust relationship, this kind of security mechanism is at great risk. The identity authentication only can guarantee that the interactive entity's identities are real, but know nothing about the entities' security status and behaviors. Therefore it also needs to carry on the authentication to the entity's platform status, simultaneously needs to introduce a dynamic method which can carry on the authentication to the entity's behavior. This paper integratestrusted code remote execution the identity authentication, platform authentication and behavior authentication based on trusted computing technology, remote attestation and trusted behavior, proposes a new mechanism for trusted code remote execution. This mechanism can solve the problem of codes executing remotely effectively.},
author = {Liqiang Zhang and Huanguo Zhang and Xiantao Zhang and Lu Chen},
journal = {2007 International Conference on Computational Intelligence and Security Workshops (CISW 2007)},
volume = {},
pages = {574-578},
doi = {10.1109/CIS.WORKSHOPS.2007.126},
}

@article{9ca61ba8ec67b3c8df7d11dc0a3188c729760682,
title = {Hidden android permissions: Remote code execution and shell access using a live wallpaper},
year = {2017},
url = {https://www.semanticscholar.org/paper/9ca61ba8ec67b3c8df7d11dc0a3188c729760682},
abstract = {Given Android's popularity, it is likely that Android devices will be targeted with increasing frequency by malware designers, in particular by programs which are designed to steal some of the sensitive personal or financial information. This threat puts an obligation on security professionals and software developers to work to ensure that the Android platform is as secure as possible. Users of mobile devices should also be aware that the trust they grant to mobile applications they download from app stores can be exploited. In this demo paper, we present a live wallpaper app to demonstrate how trust can be exploited to gain shell access even on unrooted Android devices.},
author = {Q. Mahmoud and D. Kauling and S. Zanin},
journal = {2017 14th IEEE Annual Consumer Communications & Networking Conference (CCNC)},
volume = {},
pages = {599-600},
doi = {10.1109/CCNC.2017.7983184},
}

@article{602cbd169b0ecac80d9333a3f1f8ec2c84439c74,
title = {Model Investigation for Determining Danger Level of Observable Sea Craft in Heavy Traffic Zone},
year = {2019},
url = {https://www.semanticscholar.org/paper/602cbd169b0ecac80d9333a3f1f8ec2c84439c74},
abstract = {A human factor aspect accruing in situations of a person's interaction with sophisticated engineering systems is considered to be a reason for most sea incidents and accidents. Even the most skilled experts sometimes happen to make wrong decisions even in their simple work conditions, treating them as correct or the most appropriate ones. Automatic or automated systems that assist a navigator to determine the best algorithm for solving different problems, especially those that are to be solved emergently are potentially able to mitigate the risks caused by human factor aspect in making decisions. This paper presents the findings of studying two models designed to determine the danger level of the observable sea craft (target) that may appear in a heavy traffic zone. They are a fuzzy model and the neural-fuzzy network (NFN) model. The authors define the main stages of modeling, for example, linguistic variables, an algorithm for developing a fuzzy rule base for a fuzzy model, and the test results proved by 525 test samples. The flow chart is given for the neural-fuzzy network. The NFN rule base is formalized. The authors simulated 192 different NFN, the generation of which was performed by the lattice method without clustering, and 288 NFN, where the generation of neural-fuzzy networks was performed by the subclustering method. The test results of the neural-fuzzy model are presented both in pictures and charts).},
author = {N. Sedova and V. Sedov and R. Bazhenov},
journal = {2019 International Russian Automation Conference (RusAutoCon)},
volume = {},
pages = {1-6},
doi = {10.1109/RUSAUTOCON.2019.8867731},
}

@article{1f4c38487de1ca2a05f2427358b0e3c85b74bac4,
title = {Information technology for assessing the operators working environment as an element of the ensuring automated systems ergonomics and reliability},
year = {2020},
url = {https://www.semanticscholar.org/paper/1f4c38487de1ca2a05f2427358b0e3c85b74bac4},
abstract = {The paper considers the problem of automatic assessment of working conditions at the workplaces of operators of automated complexes. We demonstrate the influence of the working environment on the reliability of the operator activity. We have developed an information technology to certify workplaces and have reasoned (from the standpoint of ergonomics, reliability, and business profitability) the choice of a set of ergonomic measures aimed at improving the working conditions of operators of complex control systems.},
author = {E. Lavrov and N. Pasko and O. Siryk},
journal = {2020 IEEE 15th International Conference on Advanced Trends in Radioelectronics, Telecommunications and Computer Engineering (TCSET)},
volume = {},
pages = {570-575},
doi = {10.1109/TCSET49122.2020.235497},
}

@article{f710b79e74cb8e145b6623ac22514dbed54e9cae,
title = {Enhancing Automatic Reasoning of human errors in an operating system using fuzzy logic},
year = {2019},
url = {https://www.semanticscholar.org/paper/f710b79e74cb8e145b6623ac22514dbed54e9cae},
abstract = {In this paper a novel fuzzy mechanism for automatic reasoning of human errors in operating systems is presented. The presented mechanism combines Human Plausible Reasoning (HPR) theory with fuzzy logic. HPR is used for inferring the commands the user of an operating system should have type and fuzzy logic is used to handle the uncertainty that characterizes the complex reasoning process by modelling the errors’ types in a more realistic way. Particularly, the output of HPR theory guesses all the possible command that the user may wants to type. These guesses can include many types of errors varying from typographic to wrong use of a legal command. In the presented mechanism, these guesses are input in a fuzzy reasoner, which takes into account the needs, characteristics and misconceptions of each individual user and decides about the most appropriate explanation of user’s error and gives personalized advice that fits better in each context and situation. The mechanism has been applied on the sub-domain of file manipulation of UNIX. The potential of the presented mechanism to reason about operating system’s users’ slips and misconceptions are discussed.},
author = {K. Chrysafiadi and M. Virvou},
journal = {2019 10th International Conference on Information, Intelligence, Systems and Applications (IISA)},
volume = {},
pages = {1-4},
doi = {10.1109/IISA.2019.8900775},
}

@article{5e99957baed5e4eeb575db34cb0a16bd2e96182f,
title = {Effectiveness of Human Error Taxonomy during Requirements Inspection: An Empirical Investigation},
year = {2016},
url = {https://www.semanticscholar.org/paper/5e99957baed5e4eeb575db34cb0a16bd2e96182f},
abstract = {Software inspections are an effective method for achieving high quality software. We hypothesize that inspections focused on identifying errors (i.e., root cause of faults) are better at finding requirements faults when compared to inspection methods that rely on checklists created using lessons-learned from historical fault-data. Our previous work verified that, error based inspections guided by an initial requirements errors taxonomy (RET) performed significantly better than standard fault-based inspections. However, RET lacked an underlying human information processing model grounded in Cognitive Psychology research. The current research reports results from a systematic literature review (SLR) of Software Engineering and Cognitive Science literature Human Error Taxonomy (HET) that contains requirements phase human errors. The major contribution of this paper is a report of control group study that compared the fault detection effectiveness and usefulness of HET with the previously validated RET. Results of this study show that subjects using HET were not only more effective at detecting faults, but they found faults faster. Post-hoc analysis of HET also revealed meaningful insights into the most commonly occurring human errors at different points during requirements development. The results provide motivation and feedback for further refining HET and creating formal inspection tools based on HET. Keywords-human error; requirements inspection; taxonomy; empirical study},
author = {Vaibhav Anu and G. Walia and Wenhua Hu and Jeffrey C. Carver and Gary L. Bradshaw},
doi = {10.18293/SEKE2016-177},
}

@article{75e71b5a885c0f9c8433ded533d0e3070c464716,
title = {Shape and Color Coding: Recall Efficiency},
year = {2020},
url = {https://www.semanticscholar.org/paper/75e71b5a885c0f9c8433ded533d0e3070c464716},
abstract = {In the paper we study the recall efficiency in operators working with visual information: ability to remember geometric shapes and colors. We conducted an experiment in which an operator had to process the visually presented information in short-term memory in order to reproduce it in the future. The results of the experiment showed equal probability of errors when recalling colors and shapes. We also managed to distinguish two groups of geometric shapes in which there is high probability of interference. The first group consists: triangle, four-pointed star, and five-pointed star; the second: circle, rectangle, oval, and square.},
author = {Yaroslav A. Svistelnikov and A. Volosiuk and O. Voronina},
journal = {2020 IEEE Conference of Russian Young Researchers in Electrical and Electronic Engineering (EIConRus)},
volume = {},
pages = {1441-1445},
doi = {10.1109/EIConRus49466.2020.9039450},
}

@article{8f04b474f8a7690598834844ac14f443b104cdef,
title = {Human Factors Psychology of Data Center Operations and Maintenance},
year = {2020},
url = {https://www.semanticscholar.org/paper/8f04b474f8a7690598834844ac14f443b104cdef},
abstract = {The human factor psychology are phenomenally adjust at identifying biases, errors, failures, defects, and deficiencies in how other people in the team think. The Institute Abnormal Incident Reports (AIRs) database reveals that approximately 70 percent of the reported data center outages are directly involved with human error. This paper has been investigated on 2 case studies, the case of data center failure of British Airways in May 2017, and data center assessment of two commercial banks in Bangkok Thailand. Data center outage according to operations and maintenance had been investigated subject to human factors much related to data center outages rather than systems failure. This paper proposes a personal certificated standard, an umbrella team structure, and data center infrastructure management (DCIM) to eliminate human error from data center operations and maintenance.},
author = {M. Wiboonrat},
journal = {2020 6th International Conference on Information Management (ICIM)},
volume = {},
pages = {167-171},
doi = {10.1109/ICIM49319.2020.244692},
}

@article{6decad53218ccf2e799d7056a76c0d35ed2a417b,
title = {Relativity modeling of work motivation and human error probability based on neural network},
year = {2016},
url = {https://www.semanticscholar.org/paper/6decad53218ccf2e799d7056a76c0d35ed2a417b},
abstract = {Human error behavior is jointly determined by human and environment, specially, the effect of work motivation has been emphasized to be an important factor on human performance in psychology and behavioral science. However, current Human Reliability Analysis (HRA) pay little attention to this aspect, which creates difficulties in finding the mechanisms of error behavior that could arise in the cognitive process. To fill the gap mentioned above, this paper considered work motivation factors into HRA, the hypothesis of the relationship between work motivation and Human Error Probability (HEP) in task context was given, with reference to the relationship between arousal and performance described by Yerkes-Dodson Law in psychology, then a relativity model of work motivation and HEP on different task difficulty was proposed based on neural network, and simulation experiment was carried out. The experimental results showed the work motivation-HEP relationship is of a U-shaped curve and the optimal work motivation for a difficult task is lower than an easy task.},
author = {Jialei Chen and Xing Pan},
journal = {2016 Prognostics and System Health Management Conference (PHM-Chengdu)},
volume = {},
pages = {1-6},
doi = {10.1109/PHM.2016.7819917},
}

@article{8fa3f0bda8ead704f496b18b84c38f8c7c9f0218,
title = {Human Factors Approach for Powered Transfemoral Prostheses Conceptual Design},
year = {2018},
url = {https://www.semanticscholar.org/paper/8fa3f0bda8ead704f496b18b84c38f8c7c9f0218},
abstract = {Prostheses are designed to replace the missing parts of body, and to increase abilities to perform daily activities. Research suggests that using powered prostheses will help improve the quality of life for the end users. Many powered prostheses have focused on only technical approaches, resulting on a lack of user acceptance. The major purpose of this research project is to provide the design of powered transfemoral prosthesis based upon human factors engineering and ergonomics approach for product design and development. Results from this study indicate that this method can be utilized to aid in the design of a microprocessor-controlled powered transfemoral prosthesis and play a significant role for product development.},
author = {M. Jongprasithporn and N. Yodpijit and J. Pinitlertsakun and Juthamas Siriwatsopon and Gary Guerra and Teppakorn Sittiwanchai},
journal = {2018 IEEE International Conference on Industrial Engineering and Engineering Management (IEEM)},
volume = {},
pages = {173-177},
doi = {10.1109/IEEM.2018.8607392},
}

@article{41202ca2deef052cf509536e510f7dbcc834f227,
title = {A Vertical Breadth-First Multilevel Path Algorithm to Find All Paths in a Graph},
year = {2019},
url = {https://www.semanticscholar.org/paper/41202ca2deef052cf509536e510f7dbcc834f227},
abstract = {This paper presents a novel approach called vertical breadth-first tree that utilizes vertical data structures to find all-length paths (including shortest paths) for all pairs of vertices in a graph. Identifying all available paths, including shortest paths is a relevant research problem as this concept can help solve a range of complex problems (e.g., routing problems in computer networks). The advancement of technology, complex computer networks, and extensive exchange of internet communications have resulted in massive increase in data. The conventional path finding algorithms do not scale well with the massive volume of data being communicated over the network and this motivates the need to develop some scalable and efficient path finding algorithms.},
author = {Maninder Singh and Vaibhav Anu and G. Walia},
doi = {10.1007/978-3-030-32587-9_10},
}

@article{bac388d0db83169063f49f35639322a6d66c4c01,
title = {Error Abstraction Accuracy and Fixation during Error-Based Requirements Inspections},
year = {2016},
url = {https://www.semanticscholar.org/paper/bac388d0db83169063f49f35639322a6d66c4c01},
abstract = {Software inspections are widely used as a requirements verification technique. Our research uses the tried-and-tested perspective of cognitive failures (i.e., human errors) to improve the effectiveness of fault detection during requirements inspections. We have previously shown that inspection effectiveness can be significantly improved by augmenting the current fault-based inspection technique with the proposed Error Abstraction and Inspection (supported by a Human Error Taxonomy). This paper investigates the impact of an inspector's ability to accurately abstract human errors on their fault-detection effectiveness.},
author = {Vaibhav Anu and G. Walia and Wenhua Hu and Jeffrey C. Carver and Gary L. Bradshaw},
journal = {2016 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW)},
volume = {},
pages = {45-46},
doi = {10.1109/ISSREW.2016.39},
}

@article{7c66d08081922701adc47e557edfc95548012882,
title = {Usefulness of a Human Error Identification Tool for Requirements Inspection: An Experience Report},
year = {2017},
url = {https://www.semanticscholar.org/paper/7c66d08081922701adc47e557edfc95548012882},
abstract = {Context and Motivation: Our recent work leverages Cognitive Psychology research on human errors to improve the standard fault-based requirements inspections. Question: The empirical study presented in this paper investigates the effectiveness of a newly developed Human Error Abstraction Assist (HEAA) tool in helping inspectors identify human errors to guide the fault detection during the requirements inspection. Results: The results showed that the HEAA tool, though effective, presented challenges during the error abstraction process. Contribution: In this experience report, we present major challenges during the study execution and lessons learned for future replications.},
author = {Vaibhav Anu and G. Walia and Gary L. Bradshaw and Wenhua Hu and Jeffrey C. Carver},
doi = {10.1007/978-3-319-54045-0_26},
}

@article{d4bebc1bb26ec0fbf890ab911ff602daebd25bdf,
title = {Assessment of the Reliability of a Human Operator in Access Systems to Information Resources},
year = {2019},
url = {https://www.semanticscholar.org/paper/d4bebc1bb26ec0fbf890ab911ff602daebd25bdf},
abstract = {The article deals with the automated systems providing information services. To describe the operator’s activities, functional networks of Professor Anatoly Gubinsky were used. Models and technology for estimating the human operator reliability were obtained. Computer experiments were conducted. The possibility of taking into account the influence of the structures of activity algorithms, working conditions and operator qualifications is shown. Results will be useful to reduce the number of human operator’s errors and to search for ergonomic reserves to improve the efficiency of information support systems.},
author = {E. Lavrov and O. Lavrova and N. Pasko and V. Kyzenko and N. Savina},
journal = {2019 IEEE International Scientific-Practical Conference Problems of Infocommunications, Science and Technology (PIC S&T)},
volume = {},
pages = {51-56},
doi = {10.1109/PICST47496.2019.9061495},
}

@article{cd463d509b22afb770c1f116ef6e425a7b488ee8,
title = {Automating Penetration Testing Within Ambiguous Testing Environment},
year = {2018},
url = {https://www.semanticscholar.org/paper/cd463d509b22afb770c1f116ef6e425a7b488ee8},
abstract = {Automated web application penetration testing has emerged as a trend. The computer was assigned the task of penetrating web application security with penetration testing technique. Relevant computer program reduces time, cost, and resources required for assessing a web application security. At the same time, scaling down tester reliance on human knowledge. Web application security scanner is such kind of program that is designed to assess web application security automatically with penetration testing technique. The downside is that computer is not well-formed as human. Consequently, web application security scanner often found generating the false alarms, especially in a testing environment, which web application source codes are unreachable. Thus, in this paper, the state-of-the-art of black box web application security scanner is systematically reviewed, to investigate the approaches for detecting web application vulnerability in an ambiguous testing environment.  This survey is critical in providing insights on how to design efficient algorithms for assessing web application security with penetration testing technique in the ambiguous environment.},
author = {Lim Kah Seng and N. Ithnin and Syed Zainudeen Mohd Shaid},
journal = {International Journal of Innovative Computing},
volume = {},
pages = {},
doi = {10.11113/IJIC.V8N3.180},
}

@article{d63ddb3b4a75c444ee3a7cf463ebf49d5f1a5678,
title = {Equipping WAP with WEAPONS to Detect Vulnerabilities: Practical Experience Report},
year = {2016},
url = {https://www.semanticscholar.org/paper/d63ddb3b4a75c444ee3a7cf463ebf49d5f1a5678},
abstract = {Although security starts to be taken into account during software development, the tendency for source code to contain vulnerabilities persists. Open source static analysis tools provide a sensible approach to mitigate this problem. However, these tools are programmed to detect a specific set of vulnerabilities and they are often difficult to extend to detect new ones. WAP is a recent popular open source tool that detects vulnerabilities in the source code of web applications written in PHP. The paper addresses the difficulty of extending these tools by proposing a modular and extensible version of the WAP tool, equipping it with "weapons" to detect (and correct) new vulnerability classes. The new version of the tool was evaluated with seven new vulnerability classes using web applications and plugins of the widely-adopted WordPress content management system. The experimental results show that this extensibility allows WAP to find many new (zero-day) vulnerabilities.},
author = {Ibéria Medeiros and N. Neves and M. Correia},
journal = {2016 46th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN)},
volume = {},
pages = {630-637},
doi = {10.1109/DSN.2016.63},
}

@article{414ffa6b728f25b324ea5c13060cba927ff014d6,
title = {Statically Detecting Vulnerabilities by Processing Programming Languages as Natural Languages},
year = {2019},
url = {https://www.semanticscholar.org/paper/414ffa6b728f25b324ea5c13060cba927ff014d6},
abstract = {Web applications continue to be a favorite target for hackers due to a combination of wide adoption and rapid deployment cycles, which often lead to the introduction of high impact vulnerabilities. Static analysis tools are important to search for bugs automatically in the program source code, supporting developers on their removal. However, building these tools requires programming the knowledge on how to discover the vulnerabilities. This paper presents an alternative approach in which tools learn to detect flaws automatically by resorting to artificial intelligence concepts, more concretely to natural language processing. The approach employs a sequence model to learn to characterize vulnerabilities based on an annotated corpus. Afterwards, the model is utilized to discover and identify vulnerabilities in the source code. It was implemented in the DEKANT tool and evaluated experimentally with a large set of PHP applications and WordPress plugins. Overall, we found several hundred vulnerabilities belonging to 12 classes of input validation vulnerabilities, where 62 of them were zero-day.},
author = {Ibéria Medeiros and N. Neves and M. Correia},
journal = {ArXiv},
volume = {abs/1910.06826},
pages = {},
doi = {10.1109/TR.2021.3137314},
arxivid = {1910.06826},
}

@article{9cc0db637bc729c4039705f85c450c2de37d7e22,
title = {DEKANT: a static analysis tool that learns to detect web application vulnerabilities},
year = {2016},
url = {https://www.semanticscholar.org/paper/9cc0db637bc729c4039705f85c450c2de37d7e22},
abstract = {The state of web security remains troubling as web applications continue to be favorite targets of hackers. Static analysis tools are important mechanisms for programmers to deal with this problem as they search for vulnerabilities automatically in the application source code, allowing programmers to remove them. However, developing these tools requires explicitly coding knowledge about how to discover each kind of vulnerability. This paper presents a new approach in which static analysis tools learn to detect vulnerabilities automatically using machine learning. The approach uses a sequence model to learn to characterize vulnerabilities based on a set of annotated source code slices. This model takes into consideration the order in which the code elements appear and are executed in the slices. The model created can then be used as a static analysis tool to discover and identify vulnerabilities in source code. The approach was implemented in the DEKANT tool and evaluated experimentally with a set of open source PHP applications and WordPress plugins, finding 16 zero-day vulnerabilities.},
author = {Ibéria Medeiros and N. Neves and M. Correia},
journal = {Proceedings of the 25th International Symposium on Software Testing and Analysis},
volume = {},
pages = {},
doi = {10.1145/2931037.2931041},
}

@article{83251ac4668ba11214d59d30c751e052c4999b84,
title = {Effect of Coding Styles in Detection of Web Application Vulnerabilities},
year = {2020},
url = {https://www.semanticscholar.org/paper/83251ac4668ba11214d59d30c751e052c4999b84},
abstract = {Web application security has become paramount for the organisation's operation, and therefore, static analysis tools (SAT) for vulnerability detection have been widely researched in the last years. Nevertheless, SATs often generate errors (false positives & negatives), whose cause is recurrently associated with very diverse coding styles, i.e., similar functionality is implemented in distinct manners, and programming practices that create ambiguity, such as the reuse and share of variables. The paper presents an analysis of SAT's behaviour and results when they process various relevant web applications coded with different coding styles. Furthermore, it discusses if the SQL injection vulnerabilities detected by SATs as true positives are really exploitable. Our results demonstrate that SATs are built having in mind how to detect specific vulnerabilities, without considering such forms of programming. They call to action for a new generation of SATs that are highly malleable to be capable of processing the codes observed in the wild.},
author = {Ibéria Medeiros and N. Neves},
journal = {2020 16th European Dependable Computing Conference (EDCC)},
volume = {},
pages = {111-118},
doi = {10.1109/EDCC51268.2020.00027},
}

@article{074d80c26c43c218d86ac8aab647523525c41537,
title = {Impact of Coding Styles on Behaviours of Static Analysis Tools for Web Applications},
year = {2020},
url = {https://www.semanticscholar.org/paper/074d80c26c43c218d86ac8aab647523525c41537},
abstract = {Web applications have become an essential resource to access the services of diverse subjects (e.g., financial, healthcare) available on the Internet. Despite the efforts that have been made on its security, namely on the investigation of better techniques to detect vulnerabilities on its source code, the number of vulnerabilities exploited has not decreased. Static analysis tools (SATs) are often used to test the security of applications since their outcomes can help developers in the correction of the bugs they found. The conducted investigation made over SATs stated they often generate errors (false positives (FP) and false negatives (FN)), whose cause is recurrently associated with very diverse coding styles, i.e., similar functionality is implemented in distinct manners, and programming practices that create ambiguity, such as the reuse and share of variables. Based on a common practice of using multiple forms in a same webpage and its processing in a single file, we defined a use case for user login and register with six coding styles scenarios for processing their data, and evaluated the behaviour of three SATs (phpSAFE, RIPS and WAP) with them to verify and understand why SATs produce FP and FN.},
author = {Ibéria Medeiros and N. Neves},
journal = {2020 50th Annual IEEE-IFIP International Conference on Dependable Systems and Networks-Supplemental Volume (DSN-S)},
volume = {},
pages = {55-56},
doi = {10.1109/DSN-S50200.2020.00030},
}

@article{d8d4db642a0c506bea2161f91cd5e4114de85bd8,
title = {Classification of BcN Vulnerabilities Based on Extended X.805},
year = {2006},
url = {https://www.semanticscholar.org/paper/d8d4db642a0c506bea2161f91cd5e4114de85bd8},
abstract = {Broadband Convergence Network(BcN) is a critical infrastructure to provide wired-and-wireless high-quality multimedia services by converging communication and broadcasting systems, However, there exist possible danger to spread the damage of an intrusion incident within an individual network to the whole network due to the convergence and newly generated threats according to the advent of various services roaming vertically and horizontally. In order to cope with these new threats, we need to analyze the vulnerabilities of BcN in a system architecture aspect and classify them in a systematic way and to make the results to be utilized in preparing proper countermeasures, In this paper, we propose a new classification of vulnerabilities which has been extended from the ITU-T recommendation X.805, which defines the security related architectural elements. This new classification includes system elements to be protected for each service, possible attack strategies, resulting damage and its criticalness, and effective countermeasures. The new classification method is compared with the existing methods of CVE(Common Vulnerabilities and Exposures) and CERT/CC(Computer Emergency Response Team/Coordination Center), and the result of an application to one of typical services, VoIP(Voice over IP) and the development of vulnerability database and its management software tool are presented in the paper. The consequence of the research presented in the paper is expected to contribute to the integration of security knowledge and to the identification of newly required security techniques.},
author = {Yoon Jong-Lim and So， Young-Ho and Min Byoung-Joon and Lee Tai-Jin},
journal = {The Kips Transactions:partc},
volume = {},
pages = {427-434},
doi = {10.3745/KIPSTC.2006.13C.4.427},
}

@article{4c67978079b2c316db4639ba9470ca6ebcf17eae,
title = {Remote Attestation on Function Execution (Work-in-Progress)},
year = {2009},
url = {https://www.semanticscholar.org/paper/4c67978079b2c316db4639ba9470ca6ebcf17eae},
abstract = {A program is a compound of various subroutines playing different roles. In this paper, we study how to attest the execution of those mission-critical subroutines whose execution is the basis to establish trust. Our results include a new attestation scheme called function attestation. Given a function F of a program $\mathcal{P}$, the proposed scheme allows for an efficient and secure attestation by using the debug facility of processors and building a trust chain rooted at TPM. Our scheme is lightweight and easy to deploy. It can also be easily extended to support multiple-threaded programs and data flow attestation with slightly more overhead.},
author = {Liang Gu and Yueqiang Cheng and Xuhua Ding and R. Deng and Yao Guo and W. Shao},
doi = {10.1007/978-3-642-14597-1_4},
}

@article{4e8cfc74ca13fbf2a809bcfb398819446199e981,
title = {Trusted virtual domains: toward secure distributed services},
year = {2005},
url = {https://www.semanticscholar.org/paper/4e8cfc74ca13fbf2a809bcfb398819446199e981},
abstract = {The focus of trusted computing efforts to date has been to create islands of trust in a sea of distrust, identifying these islands as dependable domains with a solid base that can be used for building applications upon which critical services depend. The aim of our work is to extend this solid base by building "bridges" among trusted islands, with such goals as enabling meaningful trade agreements between islands, enabling migration of individual island inhabitants, and enabling geography-independent affiliation among inhabitants of different islands.},
author = {J. Griffin and Trent Jaeger and R. Perez and R. Sailer and L. V. Doorn and R. Cáceres},
}

@article{588cfc61b17d3114170a2f99581ee6a432df2518,
title = {Remote Attestation for Custom-built Software},
year = {2009},
url = {https://www.semanticscholar.org/paper/588cfc61b17d3114170a2f99581ee6a432df2518},
abstract = {With trusted computing technology, we can build trust relations between computing platforms distributed on network. But current methods which are merely based on the integrity of components to justify the dependability of remote runtime environment, are hard to adapt today’s Internet full of heterogeneous platforms due to the scalability of measurement list. Especially when verifying open source software, this shortcoming is more obvious for the reason that all possible custom-built versions have to be considered. To solve this problem, we extended existing method to limit the size of measurement list by attesting the building process of custom-built software.},
author = {Ce Meng and Yeping He and Qian Zhang},
journal = {2009 International Conference on Networks Security, Wireless Communications and Trusted Computing},
volume = {2},
pages = {374-377},
doi = {10.1109/NSWCTC.2009.158},
}

@article{44506c89e377370547d38bdeb18470fcdc8a4c2c,
title = {Secure Sharing of Electronic Patient Records},
year = {2006},
url = {https://www.semanticscholar.org/paper/44506c89e377370547d38bdeb18470fcdc8a4c2c},
abstract = {Sharing electronic patient records without compromising individual’s privacy and confidentiality is a key challenge in adoption of distributed, electronic healthcare systems. To address this issue, it is necessary to ensure that a sender can trust the receiver and its environment to correctly implement its policy and vice versa, while sharing electronic patient records. This paper proposes an approach that can be used to establish a trust between two interacting parties based on trusted computing technologies, and describes its application and implementation in the context of distributed healthcare systems.},
author = {S. Nepal and J. Zic and Gregoire Kraehenbuehl and F. Jaccard},
}

@article{2d598be278c747b3bd4fdbbc7c087b46f67ce574,
title = {Trusted Code Remote Execution through Trusted Computing and Virtualization},
year = {2007},
url = {https://semanticscholar.org/paper/2d598be278c747b3bd4fdbbc7c087b46f67ce574},
abstract = {Given two machines A and B, A has to commit job codes to be executed on B and get the results back. How can A believe that the job codes are executed correctly on B and related privacy information is not revealed? We propose the attack model and the security goals during the remote execution process. To address this research problem, we propose a new method based on Trusted Computing and Virtualization. We extend trusted computing by providing property-based attestation, job keys generating and migrating securely in TPM. We extend virtualization by using TPM and MAC in hypervisor to isolate job VM. We examine the method to the security goals and it shows that this method can solve the problem effectively.},
author = {Liqiang  Zhang and Lu  Chen and Huanguo  Zhang and Fei  Yan},
journal = {Eighth ACIS International Conference on Software Engineering, Artificial Intelligence, Networking, and Parallel/Distributed Computing (SNPD 2007)},
volume = {1},
pages = {39-44},
doi = {10.1109/SNPD.2007.555},
}

@article{181acaf47cc8bfaacf0fa31304edb75cf6806e1b,
title = {An Integrity Assurance Mechanism for Run-Time Programs},
year = {2009},
url = {https://www.semanticscholar.org/paper/181acaf47cc8bfaacf0fa31304edb75cf6806e1b},
abstract = {To conquer the weakness of existing integrity measurement and verification mechanisms based on trusted computing technology, an integrity assurance mechanism for run-time programs is proposed in this paper. Based on a dynamic integrity measuring module, the proposed integrity assurance mechanism solves the difficulties that may be encountered when attesting to the integrity of running programs. The paper also describes the design and implementation details of the proposed module. An example of applying the proposed mechanism to protect the vTPM instances in Xen hypervisor is presented at last.},
author = {Ziyao Xu and Yeping He and Lingli Deng},
doi = {10.1007/978-3-642-01440-6_29},
}

@article{f52d8f82444916c16cf2f1a2b876affa4e804fd3,
title = {Remote attestation-based access control on trusted computing platform},
year = {2010},
url = {https://www.semanticscholar.org/paper/f52d8f82444916c16cf2f1a2b876affa4e804fd3},
abstract = {Existing remote attestation schemes based on trusted computing have some merits on enhancing security assurance level, but they usually do not integrate tightly with the classical system security mechanism. In this paper, we present a component named remote attestation-based access controller (RABAC), which is based on a combination of techniques, such as random number, Bell-La Padula (BLP) model, user identity combined with his security properties and so on. The component can validate the current hardware and software integrity of the remote platform, and implement access control with different security policy. We prove that the RABAC can not only improve the security of transferred information in remote attestation process but also integrate remote attestation and classical system security mechanism effectively.},
author = {Xian’gang Liu and Xing Zhang and Yingfang Fu and Changxiang Shen},
journal = {Wuhan University Journal of Natural Sciences},
volume = {15},
pages = {190-194},
doi = {10.1007/s11859-010-0302-x},
}
