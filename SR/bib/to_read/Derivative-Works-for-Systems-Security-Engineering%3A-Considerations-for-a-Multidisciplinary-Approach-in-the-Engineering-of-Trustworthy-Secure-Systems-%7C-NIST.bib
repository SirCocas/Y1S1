@article{9fac40dabcd6dc3b0645cfbbac59026bf0872a2c,
title = {Global Information Assurance Certification Paper},
year = {2020},
url = {https://www.semanticscholar.org/paper/9fac40dabcd6dc3b0645cfbbac59026bf0872a2c},
abstract = {Rootkits are one the most insidious forms of malware because they are designed to hide their existence on a system making them very difficult to detect. Yet there are utilities that claim to be effective at rootkit detection. OSSEC is one such utility. It is an open source host based IDS/IPS that also includes rootkit detection for Linux systems. This paper will examine and measure OSSEC’s ability to detect and identify several different Linux rootkits including both user mode and kernel mode variants. ! ! Linux Rootkit Detection with OSSEC ! 2},
author = {Thomas L. Roberts},
}

@article{4af8356161d0e9da3bbc68b3e6ebf8261037cc7b,
title = {Global Information Assurance Certification Paper},
year = {2020},
url = {https://www.semanticscholar.org/paper/4af8356161d0e9da3bbc68b3e6ebf8261037cc7b},
abstract = {Organizations invest resources to protect their confidential information and intellectual property by trying to prevent data leakage or data loss. They adopt policies and implement technical controls to stop the loss and disclosure of sensitive information by outside attackers as well as inadvertent and malicious insiders. They follow best practices like the Critical Security Controls, specifically Control 12 (“Controlled Use of Administrative Privileges”) and Control 17 (“Data Protection”), to prevent the unauthorized leakage and disclosure of sensitive information. One type of data loss or data leakage prevention controls includes endpoint protection solutions to stop file transfers to USB storage devices or file uploads to public websites. However, the larger and more complex the business and organization the more users that may be granted exceptions to these policies and controls in order for them to be able to fulfill their job related tasks. The approval of these exceptions is often solely based on the business need for the individual user. This raises the question of how an approval for an exception does influence the risk of data leakage for an organization? What is the specific data leakage risk for granting an individual user a certain exception? This paper presents a new approach to risk based exception management, which will allow organizations to grant exceptions based on inherent data leakage risk. First, this paper introduces a concept for evaluating and categorizing users based on their access to sensitive information. Then in the second step, a ruleset is defined for granting exceptions based on the categorization of users, which enables individual approvers to make informed decisions regarding exception requests. The overall objective is to lower the data leakage risk for organizations by controlling and limiting exceptions where the access and thereby potential loss of information is the highest. Preventing data leakage: A risk based approach for controlled use of the use of administrative and access privileges 2 Christoph Eckstein, christopheckstein.sec@gmx.net},
author = {C. Eckstein},
}

@article{8c1e9dfd577b4c0f6aa5d83ca27e677e2aec2549,
title = {Examination of security design principles from NIST SP 800-160},
year = {2018},
url = {https://www.semanticscholar.org/paper/8c1e9dfd577b4c0f6aa5d83ca27e677e2aec2549},
abstract = {This paper explores the engineering of secure and resilient systems through a detailed examination of security strategies and principles as presented in Appendix F of the recently published National Institute of Standards and Technology Special Publication (NIST SP) 800-160. First, a brief introduction to systems security engineering is provided with recommended readings for those who desire to become more familiar with the specialty domain. Next, the NIST SP 800-160 Appendix F systems security strategies and principles are described, as well as, examined for implementation considerations. This examination and mapping provides a linkage of abstract security strategies to concrete security principles which can be more directly implemented, traced, and tested.},
author = {L. Mailloux and Paul M. Beach and M. Span},
journal = {2018 Annual IEEE International Systems Conference (SysCon)},
volume = {},
pages = {1-8},
doi = {10.1109/SYSCON.2018.8369491},
}

@article{73813ba2804cb00688b1ff48d433c4b3b2f3ce4d,
title = {Global Information Assurance Certification Paper},
year = {2020},
url = {https://www.semanticscholar.org/paper/73813ba2804cb00688b1ff48d433c4b3b2f3ce4d},
abstract = {Software)and)systems)complexity)can)have)a)profound)impact)on)information)security.)Such) complexity)is)not)only)imposed)by)the)imperative)technical)challenges)of)monitored) heterogeneous)and)dynamic)(IP)and)VLAN)assignments))network)infrastructures,)but)also) through)the)advances)in)exploits)and)malware)distribution)mechanisms)driven)by)the) underground)economics.))In)addition,)operational)business)constraints)(disruptions)and) consequences,)manpower,)and)endEuser)satisfaction),)increase)the)complexity)of)the)problem) domain)that)security)analysts)must)adequately)operate)within.)This)is)particularly)evident) when)implementing)effective)response)measures)to)malware)infections)in)a)timely)manner,) minimizing)the)risk)to)business.)A)simple)question)becomes)particularly)valid)under)such) complex)environments;)what)appropriate)response)actions)must)be)met)to)appropriately) eradicate)malware)infections)while)maintaining)high)operational)and)low)risk)profile?)This) need)stems)from)the)absence)of)predefined)and)preEcorrelated)knowledge)of)the)environment) and)malware)behaviors.)Without)such)knowledge,)isolating,)analyzing,)and)responding)to) incidents)at)the)very)same)time)of)the)infection)become)increasingly)difficult.)Specially,)when) the)incident)involves)aggressive)malware)specimens)exhibiting)behaviors)such)as)network) propagation,)acting)as)a)spambot,)or)seeking)data)exfiltration.)In)this)case,)it)is)critical)to) respond)to)the)incident)before)serious)consequences)to)the)business)occur.) The)faster)the)compromise)is)detected)and)responded)to,)the)more)it)will)be)controlled)and)the) less)impact)it)will)have.)For)this)purpose,)a)methodological)framework)to)respond)to)malware) incidents)is)proposed.)At)its)core,)the)framework)focuses)on)minimizing)the)DetectionEToE Response)(DTR))process)and)time)frames.)The)foundations)upon)which)the)framework)is)built) consist)of)preEcorrelated)contextual)knowledge)about)the)monitored)network,)and)a)preEbuilt) malware)analysis)knowledgebase.)This)allows)the)framework)to)systematically)and) dynamically)automate)network)actions)to)isolate)infected)hosts)as)early)as)detection.)At)the) same)time,)the)collected)multidimensional)knowledge)is)presented)to)the)analyst)to)aid)during) the)investigation)and)response)phases.)Ultimately,)the)early)automation)of)response)actions,) and)reduced)response)time)frames)preserve)the)continuity)of)operations,)as)well)as)endEusers) relationship)fidelity.))To)demonstrate)the)efficacy)of)such)framework,)two)case)studies)are) presented)to)help)evaluate)the)proposed)framework)in)responding)to)malware)incidents.! An Early Malware Detection, Correlation, and Incident Response System with Case Studies! 2 ! Yaser!Mansour,!ymansour@outlook.com! ! ! 1. Complexity and Information Security “The complexity of software is an essential property, not an accidental one” (Brooks, 1987). The adopted software architecture and coding paradigms directly affect software internal and external quality attributes, specifically complexity (Mansour & Mustafa, 2011). However, complexity is not a desired system attribute. As (Schneier, 2000) notes, “The future of digital systems is complexity, and complexity is the worst enemy of security”. Complexity in this paper not only refers to the inherent complexity of software and the interactions among discrete systems (Booch, 1994), but also delves into the technical and operational challenges imposed by the monitored network infrastructure and business constraints. The former challenges include the heterogeneous and dynamic nature of a network infrastructure. The latter challenges involve the consequences on business due to malware (in this context, malware refers to any type of malicious code designed to damage or otherwise perform unintended actions on behalf of a computer system user, such as Trojans, worms, viruses, backdoors, etc.) infections, lack of manpower and expertise to respond to infected hosts and the end-user perspective. Both types of challenges require the analyst to adequately operate while maintaining credible incident analysis and response. Finally, the ability to technically respond to malware infections before they severely impact business operations is a key. Heterogeneous environments necessitate the deployment and support of various operating systems (OS’s) as business requires. This expands the problem domain for the analyst as different OS’s will be prone to different types of vulnerabilities and may be targeted with different malware infections. Hence, requiring different response techniques. Dynamic and role-based IP address and VLAN assignments raise the level of complexity for the analyst. An infected host must be accurately identified, tracked, and isolated if necessary within appropriate time frames prior to changes caused by the dynamic infrastructure. Without predetermined and readily available knowledge about the environment and infections behaviors and mitigations, it becomes increasingly difficult for the analyst to properly respond to infected hosts in a timely manner. In addition, the absence of An Early Malware Detection, Correlation, and Incident Response System with Case Studies! 3 ! Yaser!Mansour,!ymansour@outlook.com! ! ! automated response actions can be overwhelming, especially when dealing with multiple incidents at once. This is particularly evident if a host is infected with offensive malware exhibiting behaviors such as data exfiltration or attacking the internal network. Other examples include network worms such as Dorkbot (possibly propagating to other hosts) and Steckt/Neeris IRCbots, or ransomware infections such as Uruasy. In general, these types of infections not only prevent employees from performing business functions, but also can leave a negative impact if not responded to in a timely fashion. Dorkbot and Steckt/Neeris worms are presented as case studies in this paper (see Section 3). An emergent need stems from the absence of actionable data which allows for a timely-fashioned, and informed decision making regarding malware compromises. If such data exists, response actions can be dynamically determined and automated on the fly at the very same time when a malware infection strikes. Hence, avoiding the organization the consequences preceding the incident. The work presented in this paper attempts to assess the proposed custom framework to fulfil this emergent need. Another aspect of the framework that is equally important is the ability to instantly present the analyst with the pre-correlated and multidimensional knowledge regarding the malware incident. This knowledge then serves as the initial response and investigation strategy. 1.1. Malware, an Added Layer of Complexity and its Importance Historically, malware existed since the 1980’s when Fred Cohen demonstrated the ability to use malicious code to attack computers (Stamp, 2011). Unfortunately, over time and due to several factors, the perception of malware infections is not necessarily regarded as a serious risk (Ross, 2010). One of these factors that is of interest to this paper is the naming conventions used to identify malware. For example, “The quirky names given to viruses...exacerbate this tendency to trivialize an infected host as nuisance rather than a true security threat.” (Ross, 2010). One might assume since malware naming convention standards such as the Computer Antivirus Research Organization (CARO) and the Common Malware Enumeration (CME) Initiative exist, !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 1!An!example!of!how!CARO!assigns!names!to!malware!is!available!at:! http://www.microsoft.com/security/portal/mmpc/shared/malwarenaming.aspx! 2!CME!is!no!longer!active!and!all!of!its!efforts!have!been!transferred!to!the!Malware!Attribute! Enumeration!and!Characterization!(MAEC):!http://maec.mitre.org/! An Early Malware Detection, Correlation, and Incident Response System with Case Studies! 4 ! Yaser!Mansour,!ymansour@outlook.com! ! ! it may be relatively easy to name and identify malware. However, in reality, it is still a difficult task to assign malware names in a consistent manner (Zeltser, 2011). As a result, this may become a major confusion to the analyst. Mainly, because of the uncertainty of whether existing detection signatures and tools cover the encountered malware. An added layer of complexity for the analyst comes bundled with the advances in tactics and dynamics in which malware is distributed, operated, and the motivations behind it. For instance, the Kaspersky report (Kaspersky, 2013) reveals that the number of phishing attacks has almost doubled; registering an 87% increase from last year. Not only has the number of attacks increased, but also the organization of attackers. For example, targeted phishing attacks by selectively gathering intelligence about targets to craft specific phishing scams (Schneier, 2013) have been observed. This can be relatively easy using automated social engineering tools described in (Kennedy, 2013). In (Batchelder et al., 2013) report, malicious or compromised websites topped the list of threats that enterprises encounter, leading to the distribution of malware as a result. An example of such a technique to distribute malware is typically done by compromising a site which hosts content that is of common interest to a domain or group of people. Once compromised, the site’s HTML code is injected with malicious JavaScript possibly exploiting vulnerabilities on users’ machines browsing the compromised site. This type of attack is known as “Waterholing” or “Watering hole”. Specifically, this attack was used to plant malicious JavaScript on a popular developer forum to exploit unpatched Java (Romang, 2013) which eventually ended up compromising hosts at Microsoft (Thomlinson, 2013), Facebook, and Apple (Mimoso, 2013). A similar attack against the official PHP site that involved appending obfuscated JavaScript that redirected the visiting users to malicious},
author = {R. Carbone},
}

@article{00aaf99c2d567a522cf112b58e0658bb95198d44,
title = {Global Information Assurance Certification Paper},
year = {2019},
url = {https://www.semanticscholar.org/paper/00aaf99c2d567a522cf112b58e0658bb95198d44},
abstract = {One of the fundamental concerns in the security of cyberspace and e-commerce is the security of operating systems that are the core piece of software running in all information systems, such as network devices (routers, firewalls, etc), Web servers, customer desktops, PDAs, and so on. Many of known vulnerabilities discovered so far are rooted from the bugs or deficiency of underneath operating systems. This paper discusses the security (or lack of security) of most commercial operating systems like Unix and Microsoft Windows, and its effect to the overall security of Web based applications and services. Based on DOD’s trusted computer system model, the current effort toward development of secure operating systems is presented, and as a case study, the publicly available security enhanced Linux, SE-Linux, is also analyzed.},
author = {Jason Anderson},
}

@article{e5f67b995b09e750bc1a32293d5a528de7f601a9,
title = {A Customizable Framework for Prioritizing Systems Security Engineering Processes, Activities, and Tasks},
year = {2017},
url = {https://www.semanticscholar.org/paper/e5f67b995b09e750bc1a32293d5a528de7f601a9},
abstract = {As modern systems become increasingly complex, current security practices lack effective methodologies to adequately address the system security. This paper proposes a repeatable and tailorable framework to assist in the application of systems security engineering (SSE) processes, activities, and tasks as defined in the recently released National Institute of Standards and Technology (NIST) Special Publication 800–160. First, a brief survey of systems-oriented security methodologies is provided. Next, an examination of the relationships between the NIST-defined SSE processes is conducted to provide context for the engineering problem space. These findings inform a mapping of the NIST SSE processes to seven system-agnostic security domains which enable prioritization for three types of systems (conventional IT, cyber-physical, and defense). These concrete examples provide further understanding for applying and prioritizing the SSE effort. The goal of this paper is assist practitioners by informing the efficient application of the 30 processes, 111 activities, and 428 tasks defined in NIST SP 800–160. The customizable framework tool is available online for developers to employ, modify, and tailor to meet their needs.},
author = {Stephen Khou and L. Mailloux and J. Pecarina and Michael McEvilley},
journal = {IEEE Access},
volume = {5},
pages = {12878-12894},
doi = {10.1109/ACCESS.2017.2714979},
}

@article{60263d8c45ec13890a1d970346b2d4ae1c916cf8,
title = {Global Information Assurance Certification Paper},
year = {2020},
url = {https://www.semanticscholar.org/paper/60263d8c45ec13890a1d970346b2d4ae1c916cf8},
abstract = {What security concerns keep you up at night? Is it pivoting, persistent access, the time to detect compromise, or one of a thousand other possibilities? What if you were told that without a doubt, you have tools at your disposal to periodically verify your security posture and you are not presently using them? Why spend more hours and more budget implementing a new product with new agents and new headaches that will not effectively reduce your workload or anxiety level? Even if you have commercial tools already monitoring your systems for security events, how do you know they are working? Is it even practical to use a customized PowerShell scripts/plugins, built-in event logs, and a traditional monitoring tool such as Nagios to monitor for indicators of compromise on Windows systems? In addition, you will be presented with some applied research as well as easy to follow guidelines you can integrate into your own environment(s). Uncovering Indicators of Compromise | 2 Dallas Haselhorst},
author = {Manuel Humberto Santander Peláez and Dallas Haselhorst},
}

@article{3c67bab8d29fae62dc94c8f1b679250f5ae28a6e,
title = {Bringing Systems Engineering and Security Together: A Systems Security Engineering Learning Path},
year = {2018},
url = {https://www.semanticscholar.org/paper/3c67bab8d29fae62dc94c8f1b679250f5ae28a6e},
abstract = {This paper promotes a comprehensive, systems-oriented approach to security engineering for complex systems which ensures adequate integration of security engineering considerations throughout the entire system life cycle. First, key definitions and concepts are presented for those unfamiliar with the specialty domain of Systems Security Engineering (SSE). Next, a tailorable SSE curriculum is provided to further promote the institutionalization and standardization of SSE across a wide variety of stakeholders, security specialties, and engineering disciplines. The goal of the curriculum is for students to gain increased understanding of SSE roles, responsibilities, and concepts, as well as, gain familiarity with established SSE processes, activities, and tasks to more purposefully develop secure and resilient systems. Lastly, initial mappings to the National Initiative for Cybersecurity Education (NICE) workforce framework are provided.},
author = {L. Mailloux},
journal = {2018 IEEE International Systems Engineering Symposium (ISSE)},
volume = {},
pages = {1-6},
doi = {10.1109/SYSENG.2018.8544430},
}

@article{19c82177a656f634852ba710ac64e21f899c3d73,
title = {Analysis of Systems Security Engineering Design Principles for the Development of Secure and Resilient Systems},
year = {2019},
url = {https://www.semanticscholar.org/paper/19c82177a656f634852ba710ac64e21f899c3d73},
abstract = {The increasing prevalence of cyber-attacks highlights the need for improved systems security analysis and engineering in safety-critical and mission-essential systems. Moreover, the engineering challenge of developing secure and resilient systems that meet specified constraints of cost, schedule, and performance is progressively difficult given the trend toward increasing complexity, interrelated systems-of-systems. This paper analyzes the 18 design principles presented in the National Institute of Standards and Technology Special Publication (NIST SP) 800-160 Volume 1 and considers their applicability for the development of secure and resilient systems of interest. The purpose of this work is to better understand how these design principles can be consistently and effectively employed to meet stakeholder defined security and resiliency needs as part of a comprehensive systems security engineering approach. Specifically, this work uses the Design Structure Matrix (DSM) analysis to study the 18 design principles presented in NIST SP 800-160 Vol. 1, Appendix F, along with their intra- and inter-dependencies to develop complex cyber-physical systems that are secure, trustworthy, and resilient. The DSM analysis results increase understanding of the various relationships between the 18 design principles and identifies two clusters for secure systems design: Architecture and Trust. Lastly, this work provides a notional command and control system case study, along with a detailed listing of engineering considerations, to demonstrate how these principles and their groupings can be systematically applied as part of a comprehensive approach for developing cyber-physical systems which are designed to operate in hostile environments.},
author = {Paul M. Beach and L. Mailloux and Brent T. Langhals and R. Mills},
journal = {IEEE Access},
volume = {7},
pages = {101741-101757},
doi = {10.1109/ACCESS.2019.2930718},
}

@article{0aca0ac676deb000a418944b06d069d59da31fa5,
title = {A Framework for Understanding, Prioritizing, and Applying Systems Security Engineering Processes, Activities, and Tasks},
year = {2017},
url = {https://www.semanticscholar.org/paper/0aca0ac676deb000a418944b06d069d59da31fa5},
abstract = {Current systems security practices lack an effective approach to prioritize and tailor systems security efforts to develop and field secure systems in challenging operational environments, which results in business and mission stakeholders becoming more susceptible to an array of disruptive events. This work informs Systems Engineers on recent developments in the field of system security engineering and provides a framework for more fully understanding the application of Systems Security Engineering (SSE) processes, activities, and tasks as described in the recently released National Institute of Standards and Technology (NIST) Special Publication 800-160. This SSE framework uniquely offers a repeatable and tailorable methodology that allows system developers to focus on high Return-on-Investment (RoI) SSE processes, activities, and tasks to more efficiently meet stakeholder protection needs and deliver trustworthy secure},
author = {Stephen Khou},
}
