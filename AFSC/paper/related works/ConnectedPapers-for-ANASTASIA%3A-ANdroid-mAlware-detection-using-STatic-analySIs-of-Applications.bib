@article{b0334ee16025e475de8eb309c254bbbaa0fbc045,
title = {ANASTASIA: ANdroid mAlware detection using STatic analySIs of Applications},
year = {2016},
url = {https://www.semanticscholar.org/paper/b0334ee16025e475de8eb309c254bbbaa0fbc045},
abstract = {The number of malware applications targeting the Android operating system has significantly increased in recent years. Malicious applications pose a significant threat to Android platform security. We propose ANASTASIA, a system to detect malicious Android applications through statically analyzing applications' behaviors. ANASTASIA provides a more complete coverage of security behaviors when compared to state-of-the-art solutions. We utilize a large number of statically extracted features from various security behavioral characteristics of an application. We built a Machine Learning-based detection framework with high performance detection and acceptable false positive rate. The significance of our work is to develop a lightweight malware detection system for Android-powered smartphones that leverages robust, effective, and efficient features. Besides, in order to assess our solution, we used a reliable, large-scale, and updated malware data-set in terms of diversity and number of malware applications. We evaluated the performance of our proposal on large-scale malware data-set (including 18,677 malware and 11,187 benign apps). Our experimental results show a true positive rate of 97.3% and a false negative rate of 2.7%. These results are better than what are reported by state-of-the-art Android malware detection methods.},
author = {H. Fereidooni and M. Conti and D. Yao and A. Sperduti},
doi = {10.1109/NTMS.2016.7792435},
}

@article{4166e5c2a916b7e48c166914925084d88e84336b,
title = {Efficient Classification of Android Malware in the wild using Robust Static Features},
year = {2016},
url = {https://www.semanticscholar.org/paper/4166e5c2a916b7e48c166914925084d88e84336b},
abstract = {The ubiquitous use of Android smartphones continue to threaten the security and privacy of users’ personal information. Its fast adoption rate makes the smartphone an interesting target for malware authors to deploy new attacks and infect millions of devices. Moreover, the growing number and diversity of malicious applications render conventional defenses ineffective. Thus, there is a need to not only better understand the characteristics of malware families but also, to generate features that are robust and efficient for classification over an extended period of time. In this chapter, we propose a machine learning based malware detection and classification methodology, with the use of static analysis as feature extraction method. Our tool, uniPDroid can be used to extract a plethora of informative features from our extensive dataset. We performed a malware family classification and obtained an average classification accuracy of 92%. We also present the empirical results for our cumulative classification which investigates how well features from old malware can contribute to the detection of new variants of both known and unknown malware.},
author = {H. Fereidooni and Veelasha Moonsamy and M. Conti and L. Batina},
}

@article{c045ebdd4840d65826f7eedaced29c4e7382095d,
title = {A Systematic Review Analysis for Mobile Botnet Detection using GPS Exploitation},
year = {2018},
url = {https://www.semanticscholar.org/paper/c045ebdd4840d65826f7eedaced29c4e7382095d},
abstract = {At present, mobile botnet has become a cyber threat for smartphone users especially on the Android platform. It has the capabilities to exploit the vulnerabilities and steal confidential information in the victim’s smartphone. Zeus, DroidDream and MisoSMS are examples of mobile botnets that have affected thousands of users worldwide. Therefore, this research paper presents a systematic review analysis on the existing techniques for mobile botnet detection techniques. It discusses the strengths and the weaknesses of the existing mobile botnet detection techniques and related works of mobile botnet that exploit GPS. This research paper can be used as a reference and guidance for those with the same interest.},
author = {Muhammad Yusof and Madihah Mohd Saudi and Farida Hazwani Mohd Ridzuan},
journal = {Malaysian Journal of Science Health & Technology},
volume = {},
pages = {},
doi = {10.33102/mjosht.v2i.45},
}

@article{0b49800c2288995deb2196e1d1323392d8299cec,
title = {Adware detection and privacy control in mobile devices},
year = {2014},
url = {https://www.semanticscholar.org/paper/0b49800c2288995deb2196e1d1323392d8299cec},
abstract = {In this paper we propose a system and algorithms for detection of Adware in mobile devices that are based on machine learning algorithms and are capable of adapting to the ongoing transformation of Adware and Malware. The system is based on static and dynamic analysis of mobile applications, extraction of useful features and real-time classification. This classification is based on supervised machine learning algorithms with emphasis on fast, linear operations and efficient implementation on mobile devices. The system presented in this paper enables identification of relevant features that are salient in Adware and Malware, useful for further analysis by security researchers. The proposed system exhibits a detection rate of 97%. The system has been tested and verified on known, industry standard, datasets and is superior to state of the art solutions available in the market. These result have been verified by 3rd party evaluators.},
author = {I. Ideses and A. Neuberger},
journal = {2014 IEEE 28th Convention of Electrical & Electronics Engineers in Israel (IEEEI)},
volume = {},
pages = {1-5},
doi = {10.1109/EEEI.2014.7005849},
}

@article{0f1f0e5212aa55204d11a0880f5d1abdbfe703d2,
title = {Android Malware Detection & Protection: A Survey},
year = {2016},
url = {https://www.semanticscholar.org/paper/0f1f0e5212aa55204d11a0880f5d1abdbfe703d2},
abstract = {Android has become the most popular smartphone operating system. This rapidly increasing adoption of Android has resulted in significant increase in the number of malwares when compared with previous years. There exist lots of antimalware programs which are designed to effectively protect the users’ sensitive data in mobile systems from such attacks. In this paper, our contribution is twofold. Firstly, we have analyzed the Android malwares and their penetration techniques used for attacking the systems and antivirus programs that act against malwares to protect Android systems. We categorize many of the most recent antimalware techniques on the basis of their detection methods. We aim to provide an easy and concise view of the malware detection and protection mechanisms and deduce their benefits and limitations. Secondly, we have forecast Android market trends for the year up to 2018 and provide a unique hybrid security solution and take into account both the static and dynamic analysis an android application.},
author = {Saba Arshad and M. A. Shah and Abid Khan and Mansoor Ahmed},
journal = {International Journal of Advanced Computer Science and Applications},
volume = {7},
pages = {},
doi = {10.14569/IJACSA.2016.070262},
}

@article{5444f9d3566bc0a11e01580a6fc89b3c937b3bd9,
title = {DeepRefiner: Multi-layer Android Malware Detection System Applying Deep Neural Networks},
year = {2018},
url = {https://www.semanticscholar.org/paper/5444f9d3566bc0a11e01580a6fc89b3c937b3bd9},
abstract = {As malicious behaviors vary significantly across mobile malware, it is challenging to detect malware both efficiently and effectively. Also due to the continuous evolution of malicious behaviors, it is difficult to extract features by laborious human feature engineering and keep up with the speed of malware evolution. To solve these challenges, we propose DeepRefiner to identify malware both efficiently and effectively. The novel technique enabling effectiveness is the semantic-based deep learning. We use Long Short Term Memory on the semantic structure of Android bytecode, avoiding missing the details of method-level bytecode semantics. To achieve efficiency, we apply Multilayer Perceptron on the xml files based on the finding that most malware can be efficiently identified using information only from xml files. We evaluate the detection performance of DeepRefiner with 62,915 malicious applications and 47,525 benign applications, showing that DeepRefiner effectively detects malware with an accuracy of 97.74% and a false positive rate of 2.54%. We compare DeepRefiner with a state-of-the-art single classifierbased detection system, StormDroid, and ten widely used signature-based anti-virus scanners. The experimental results show that DeepRefiner significantly outperforms StormDroid and anti-virus scanners. In addition, we evaluate the robustness of DeepRefiner against typical obfuscation techniques and adversarial samples. The experimental results demonstrate that DeepRefiner is robust in detecting obfuscated malicious applications.},
author = {Ke Xu and Yingjiu Li and R. Deng and Kai Chen},
journal = {2018 IEEE European Symposium on Security and Privacy (EuroS&P)},
volume = {},
pages = {473-487},
doi = {10.1109/EuroSP.2018.00040},
}

@article{8bf911dc441f08007e3292b342c7aca49d8cee71,
title = {Android Malware Characterization using Metadata and Machine Learning Techniques},
year = {2017},
url = {https://www.semanticscholar.org/paper/8bf911dc441f08007e3292b342c7aca49d8cee71},
abstract = {Android malware has emerged as a consequence of the increasing popularity of smartphones and tablets. While most previous work focuses on inherent characteristics of Android apps to detect malware, this study analyses indirect features and metadata to identify patterns in malware applications. Our experiments show the following: (1) the permissions used by an application offer only moderate performance results; (2) other features publicly available at Android markets are more relevant in detecting malware, such as the application developer and certificate issuer; and (3) compact and efficient classifiers can be constructed for the early detection of malware applications prior to code inspection or sandboxing.},
author = {I. Martín and José Alberto Hernández and Alfonso Muñoz and Antonio Guzmán},
journal = {ArXiv},
volume = {abs/1712.04402},
pages = {},
doi = {10.1155/2018/5749481},
arxivid = {1712.04402},
}

@article{5acbd42e973feb51294be1fb04d1eeb035ee6be4,
title = {DroidCat: Effective Android Malware Detection and Categorization via App-Level Profiling},
year = {2019},
url = {https://www.semanticscholar.org/paper/5acbd42e973feb51294be1fb04d1eeb035ee6be4},
abstract = {Most existing Android malware detection and categorization techniques are static approaches, which suffer from evasion attacks, such as obfuscation. By analyzing program behaviors, dynamic approaches are potentially more resilient against these attacks. Yet existing dynamic approaches mostly rely on characterizing system calls which are subject to system-call obfuscation. This paper presents DroidCat, a novel dynamic app classification technique, to complement existing approaches. By using a diverse set of dynamic features based on method calls and inter-component communication (ICC) Intents without involving permission, app resources, or system calls while fully handling reflection, DroidCat achieves superior robustness than static approaches as well as dynamic approaches relying on system calls. The features were distilled from a behavioral characterization study of benign versus malicious apps. Through three complementary evaluation studies with 34 343 apps from various sources and spanning the past nine years, we demonstrated the stability of DroidCat in achieving high classification performance and superior accuracy compared with the two state-of-the-art peer techniques that represent both static and dynamic approaches. Overall, DroidCat achieved 97% F1-measure accuracy consistently for classifying apps evolving over the nine years, detecting or categorizing malware, 16%–27% higher than any of the two baselines compared. Furthermore, our experiments with obfuscated benchmarks confirmed higher robustness of DroidCat over these baseline techniques. We also investigated the effects of various design decisions on DroidCat’s effectiveness and the most important features for our dynamic classification. We found that features capturing app execution structure such as the distribution of method calls over user code and libraries are much more important than typical security features such as sensitive flows.},
author = {Haipeng Cai and Na Meng and B. Ryder and Daphne Yao},
journal = {IEEE Transactions on Information Forensics and Security},
volume = {14},
pages = {1455-1470},
doi = {10.1109/TIFS.2018.2879302},
}

@article{9108d067899898281acdd5aeac19e39fa388d254,
title = {DAPASA: Detecting Android Piggybacked Apps Through Sensitive Subgraph Analysis},
year = {2017},
url = {https://www.semanticscholar.org/paper/9108d067899898281acdd5aeac19e39fa388d254},
abstract = {With the exponential growth of smartphone adoption, malware attacks on smartphones have resulted in serious threats to users, especially those on popular platforms, such as Android. Most Android malware is generated by piggybacking malicious payloads into benign applications (apps), which are called piggybacked apps. In this paper, we propose DAPASA, an approach to detect Android piggybacked apps through sensitive subgraph analysis. Two assumptions are established to reflect the different invocation patterns of sensitive APIs in the injected malicious payloads (rider) of a piggybacked app and in its host app (carrier). With these two assumptions, DAPASA generates a sensitive subgraph (SSG) to profile the most suspicious behavior of an app. Five features are constructed from SSG to depict the invocation patterns. The five features are fed into the machine learning algorithms to detect whether the app is piggybacked or benign. DAPASA is evaluated on a large real-world data set consisting of 2551 piggybacked apps and 44 921 popular benign apps. Extensive evaluation results demonstrate that the proposed approach exhibits an impressive detection performance compared with that of three baseline approaches even with only five numeric features. Furthermore, the proposed approach can complement permission-based approaches and API-based approaches with the combination of our five features from a new perspective of the invocation structure.},
author = {Ming Fan and J. Liu and W. Wang and Haifei Li and Zhenzhou Tian and Ting Liu},
journal = {IEEE Transactions on Information Forensics and Security},
volume = {12},
pages = {1772-1785},
doi = {10.1109/TIFS.2017.2687880},
}

@article{c55aac79840751c940d2d470e092d964a7cb2311,
title = {A Deep Learning Approach to Android Malware Feature Learning and Detection},
year = {2016},
url = {https://www.semanticscholar.org/paper/c55aac79840751c940d2d470e092d964a7cb2311},
abstract = {The growing amount and diversity of Android malware has significantly weakened the effectiveness of the conventional defense mechanisms, and thus Android platform often remains unprotected from new and unknown malware. To address these limitations, we propose DroidDeep, a malware detection approach for the Android platform based on the deep learning model. Deep learning emerges as a new area of machine learning research that has attracted increasing attention in artificial intelligence. To implement this, we first extract five types of features from the static analysis of Android apps. Then, we build the deep learning model to learn features from Android apps. Finally, the learned features are used to detect unknown Android malware. In an experiment with 3,986 benign apps and 3,986 malware, DroidDeep outperforms several existing malware detection approaches and achieves a 99.4% detection accuracy. Moreover, DroidDeep can achieve a remarkable run-time efficiency which makes it very easy to adapt to a lager scale of real-world Android malware detection.},
author = {Xin Su and Dafang Zhang and Wenjia Li and Kai Zhao},
journal = {2016 IEEE Trustcom/BigDataSE/ISPA},
volume = {},
pages = {244-251},
doi = {10.1109/TrustCom.2016.0070},
}

@article{ac268474b1dddccaf9ce01af1dca01caeaf4e766,
title = {Feature-Based Semi-supervised Learning to Detect Malware from Android},
year = {2020},
url = {https://www.semanticscholar.org/paper/ac268474b1dddccaf9ce01af1dca01caeaf4e766},
abstract = {Malware is potentially harmful to an Android operating system just like desktop operating system. With the exponential growth of Android device we have analyze that the growth of Android malware is also increasing day by day and it paid a serious security threat to user’s privacy. Previously developed frameworks and virus protection softwares are capable to detect “known” malware specifically. In the previous studies researchers, has applied distinct supervised machine learning approaches to detect “unknown” malware, but practicality is far to be achieve because it needs a wide range of labeled data to train. In this work, we present a unique procedure to detect malware by employing a renowned semi-supervised learning technique. The approach presented in this chapter is help us to select best features by applying feature sub-set selection methods and to establish a malware detection model. We performed an empirical validation to demonstrate that semi-supervised machine learning techniques are sustaining the higher accuracy rates like supervised machine learning techniques used in the literature.},
author = {Arvind Mahindru and A. L. Sangal},
doi = {10.1007/978-3-030-38006-9_6},
}

@article{ae5eb09b64347f1ac0531d5c1bd873b2357b8838,
title = {StormDroid: A Streaminglized Machine Learning-Based System for Detecting Android Malware},
year = {2016},
url = {https://www.semanticscholar.org/paper/ae5eb09b64347f1ac0531d5c1bd873b2357b8838},
abstract = {Mobile devices are especially vulnerable nowadays to malware attacks, thanks to the current trend of increased app downloads. Despite the significant security and privacy concerns it received, effective malware detection (MD) remains a significant challenge. This paper tackles this challenge by introducing a streaminglized machine learning-based MD framework, StormDroid: (i) The core of StormDroid is based on machine learning, enhanced with a novel combination of contributed features that we observed over a fairly large collection of data set; and (ii) we streaminglize the whole MD process to support large-scale analysis, yielding an efficient and scalable MD technique that observes app behaviors statically and dynamically. Evaluated on roughly 8,000 applications, our combination of contributed features improves MD accuracy by almost 10% compared with state-of-the-art antivirus systems; in parallel our streaminglized process, StormDroid, further improves efficiency rate by approximately three times than a single thread.},
author = {Sen Chen and Minhui Xue and Zhushou Tang and Lihua Xu and Haojin Zhu},
journal = {Proceedings of the 11th ACM on Asia Conference on Computer and Communications Security},
volume = {},
pages = {},
doi = {10.1145/2897845.2897860},
}

@article{b62c069a368957afc81003a9b65b582c925b0821,
title = {PerbDroid: Effective Malware Detection Model Developed Using Machine Learning Classification Techniques},
year = {2020},
url = {https://www.semanticscholar.org/paper/b62c069a368957afc81003a9b65b582c925b0821},
abstract = {This chapter introduces PerbDroid—a framework to detect malware from Android smartphones. To address the issues of malware detection through a broad set of apps, researchers have recently started to identify the features which helps to detect malware from apps. The proposed framework is based on features selection techniques which help us to develop a useful model for malware detection. We collected a data set of 2,00,000 Android apps from distinct sources and extracted permissions and API calls from them (consider as features in this study). Further, features are selected by using six different feature ranking approaches (i.e., Gain Ratio, OneR feature evaluation, Chi-squared test, Information gain feature evaluation, Principal Component Analysis (PCA) and Logistic regression analysis) to develop the model for malware detection. We evaluated several machine learning algorithms and feature selection methods in identifying the combination that gives the foremost performance to detect malware from real-world apps. Empirical outcomes illustrate that the proposed framework is useful to detect malware from smartphones mainly and in particularly from Android.},
author = {Arvind Mahindru and A. L. Sangal},
doi = {10.1007/978-3-030-40928-9_7},
}

@article{57ca051a2c3f8ab24e029e4c5f0c8f9bd819ac77,
title = {Deep Android Malware Classification with API-Based Feature Graph},
year = {2019},
url = {https://www.semanticscholar.org/paper/57ca051a2c3f8ab24e029e4c5f0c8f9bd819ac77},
abstract = {The rapid growth of Android malware apps poses a great security threat to users thus it is very important and urgent to detect Android malware effectively. What's more, the increasing unknown malware and evasion technique also call for novel detection method. In this paper, we focus on API feature and develop a novel method to detect Android malware. First, we propose a novel selection method for API feature related with the malware class. However, such API also has a legitimate use in benign app thus causing FP problem (misclassify benign as malware). Second, we further explore structure relationships between these APIs and map to a matrix interpreted as the hand-refined API-based feature graph. Third, a CNN-based classifier is developed for the API-based feature graph classification. Evaluations of a real-world dataset containing 3,697 malware apps and 3,312 benign apps demonstrate that selected API feature is effective for Android malware classification, just top 20 APIs can achieve high F1 of 94.3% under Random Forest classifier. When the available API features are few, classification performance including FPR indicator can achieve effective improvement effectively by complementing our further work.},
author = {Na Huang and Ming Xu and Ning Zheng and T. Qiao and K. Choo},
journal = {2019 18th IEEE International Conference On Trust, Security And Privacy In Computing And Communications/13th IEEE International Conference On Big Data Science And Engineering (TrustCom/BigDataSE)},
volume = {},
pages = {296-303},
doi = {10.1109/TrustCom/BigDataSE.2019.00047},
}

@article{05203ee36699ce1b66e420d41dbc6dfd7fdb16fc,
title = {Exploring Permission-Induced Risk in Android Applications for Malicious Application Detection},
year = {2014},
url = {https://www.semanticscholar.org/paper/05203ee36699ce1b66e420d41dbc6dfd7fdb16fc},
abstract = {Android has been a major target of malicious applications (malapps). How to detect and keep the malapps out of the app markets is an ongoing challenge. One of the central design points of Android security mechanism is permission control that restricts the access of apps to core facilities of devices. However, it imparts a significant responsibility to the app developers with regard to accurately specifying the requested permissions and to the users with regard to fully understanding the risk of granting certain combinations of permissions. Android permissions requested by an app depict the app's behavioral patterns. In order to help understanding Android permissions, in this paper, we explore the permission-induced risk in Android apps on three levels in a systematic manner. First, we thoroughly analyze the risk of an individual permission and the risk of a group of collaborative permissions. We employ three feature ranking methods, namely, mutual information, correlation coefficient, and T-test to rank Android individual permissions with respect to their risk. We then use sequential forward selection as well as principal component analysis to identify risky permission subsets. Second, we evaluate the usefulness of risky permissions for malapp detection with support vector machine, decision trees, as well as random forest. Third, we in depth analyze the detection results and discuss the feasibility as well as the limitations of malapp detection based on permission requests. We evaluate our methods on a very large official app set consisting of 310 926 benign apps and 4868 real-world malapps and on a third-party app sets. The empirical results show that our malapp detectors built on risky permissions give satisfied performance (a detection rate as 94.62% with a false positive rate as 0.6%), catch the malapps' essential patterns on violating permission access regulations, and are universally applicable to unknown malapps (detection rate as 74.03%).},
author = {W. Wang and Xing Wang and Dawei Feng and Jiqiang Liu and Zhen Han and X. Zhang},
journal = {IEEE Transactions on Information Forensics and Security},
volume = {9},
pages = {1869-1882},
doi = {10.1109/TIFS.2014.2353996},
}

@article{9e1efd3f8173b6c2624f1df4403c209c493ff177,
title = {FAMOUS: Forensic Analysis of MObile devices Using Scoring of application permissions},
year = {2018},
url = {https://www.semanticscholar.org/paper/9e1efd3f8173b6c2624f1df4403c209c493ff177},
abstract = {Abstract With the emergence of Android as a leading operating system in mobile devices, it becomes mandatory to develop specialized, predictive and robust security measures to provide a dependable environment for users. Extant reactive and proactive security techniques would not be enough to tackle the fast-growing security challenges in the Android environment. This paper has proposed a predictive forensic approach to detect suspicious Android applications. An in-depth study of statistical properties of permissions used by the malicious and benign Android applications has been performed. Based on the results of this study, a weighted score based feature set has been created which is used to build a predictive and lightweight malware detector for Android devices. Various experiments conducted on the aforementioned feature set, an improved accuracy level of 99% has been achieved with Random Forest classifier. This trained model has been used to build a forensic tool entitled FAMOUS (F orensic A nalysis of MO bile devices U sing S coring of application permissions) which is able to scan all the installed applications of an attached device and provide a descriptive report.},
author = {Ajit Kumar and K. Kuppusamy and G. Aghila},
journal = {Future Gener. Comput. Syst.},
volume = {83},
pages = {158-172},
doi = {10.1016/j.future.2018.02.001},
}

@article{bfcf5462a0e53902a6cf4a942aec7f81ac2e4e43,
title = {Identifying Android malware using dynamically obtained features},
year = {2015},
url = {https://www.semanticscholar.org/paper/bfcf5462a0e53902a6cf4a942aec7f81ac2e4e43},
abstract = {The constant evolution of mobile devices’ resources and features turned ordinary phones into powerful and portable computers, leading their users to perform payments, store sensitive information and even to access other accounts on remote machines. This scenario has contributed to the rapid rise of new malware samples targeting mobile platforms. Given that Android is the most widespread mobile operating system and that it provides more options regarding application markets (official and alternative stores), it has been the main target for mobile malware. As such, markets that publish Android applications have been used as a point of infection for many users, who unknowingly download some popular applications that are in fact disguised malware. Hence, there is an urge for techniques to analyze and identify malicious applications before they are published and able to harm users. In this article, we present a system to dynamically identify whether an Android application is malicious or not, based on machine learning and features extracted from Android API calls and system call traces. We evaluated our system with 7,520 apps, 3,780 for training and 3,740 for testing, and obtained a detection rate of 96.66 %.},
author = {V. M. Afonso and M. F. Amorim and A. Grégio and Glauco Barroso Junquera and P. Geus},
journal = {Journal of Computer Virology and Hacking Techniques},
volume = {11},
pages = {9-17},
doi = {10.1007/s11416-014-0226-7},
}

@article{e5ad332e2b23727ae842875674b60a99f490fed8,
title = {Detecting Malware for Android Platform: An SVM-Based Approach},
year = {2015},
url = {https://www.semanticscholar.org/paper/e5ad332e2b23727ae842875674b60a99f490fed8},
abstract = {In recent years, Android has become one of the most popular mobile operating systems because of numerous mobile applications (apps) it provides. However, the malicious Android applications (malware) downloaded from third-party markets have significantly threatened users' security and privacy, and most of them remain undetected due to the lack of efficient and accurate malware detection techniques. In this paper, we study a malware detection scheme for Android platform using an SVM-based approach, which integrates both risky permission combinations and vulnerable API calls and use them as features in the SVM algorithm. To validate the performance of the proposed approach, extensive experiments have been conducted, which show that the proposed malware detection scheme is able to identify malicious Android applications effectively and efficiently.},
author = {Wenjia Li and Jigang Ge and Guqian Dai},
journal = {2015 IEEE 2nd International Conference on Cyber Security and Cloud Computing},
volume = {},
pages = {464-469},
doi = {10.1109/CSCloud.2015.50},
}

@article{4f3cdf6111cebc1a8302bd242cfc391d95d52931,
title = {Rapid Android Parser for Investigating DEX files (RAPID)},
year = {2016},
url = {https://www.semanticscholar.org/paper/4f3cdf6111cebc1a8302bd242cfc391d95d52931},
abstract = {Android malware is a well-known challenging problem and many researchers/vendors/practitioners have tried to address this issue through application analysis techniques. In order to analyze Android applications, tools decompress APK files and extract relevant data from the Dalvik EXecutable (DEX) files. To acquire the data, investigators either use decompiled intermediate code generated by existing tools, e.g., Baksmali or Dex2jar or write their own parsers/dissemblers. Thus, they either need additional time because of decompiling the application into an intermediate representation and then parsing text files, or they reinvent the wheel by implementing their own parsers. In this article, we present Rapid Android Parser for Investigating DEX files (RAPID) which is an open source and easy-to-use JAVA library for parsing DEX files. RAPID comes with well-documented APIs which allow users to query data directly from the DEX binary files. Our experiments reveal that RAPID outperforms existing approaches in terms of runtime efficiency, provides better reliability (does not crash) and can support dynamic analysis by finding critical offsets. Notably, the processing time for our sample set of 22.35źGB was only 1.5źh with RAPID while the traditional approaches needed about 23źh (parsing and querying).},
author = {Xiaolu Zhang and Frank Breitinger and I. Baggili},
journal = {Digit. Investig.},
volume = {17},
pages = {28-39},
doi = {10.1016/j.diin.2016.03.002},
}

@article{2c1c28640b4ce4f56288371b37d8b9599f911bfa,
title = {Adaptive and scalable Android malware detection through online learning},
year = {2016},
url = {https://www.semanticscholar.org/paper/2c1c28640b4ce4f56288371b37d8b9599f911bfa},
abstract = {It is well-known that malware constantly evolves so as to evade detection and this causes the entire malware population to be non-stationary. Contrary to this fact, prior works on machine learning based Android malware detection have assumed that the distribution of the observed malware characteristics (i.e., features) do not change over time. In this work, we address the problem of malware population drift and propose a novel online machine learning based framework, named DroidOL to handle it and effectively detect malware. In order to perform accurate detection, security-sensitive behavior are captured from apps in form of inter-procedural control-flow sub-graph features using a state-of-the-art graph kernel. In order to perform scalable detection and to adapt to the drift and evolution in malware population, an online passive-aggressive classifier is used. In a large-scale comparative analysis with more than 87,000 apps, DroidOL achieves 84.29% accuracy outperforming two state-of-the-art malware techniques by more than 20% in their typical batch learning setting and more than 3% when they are continuously re-trained. Our experimental findings strongly indicate that online learning based approaches are highly suitable for real-world malware detection.},
author = {A. Narayanan and Y. Liu and Lihui Chen and Jinliang Liu},
journal = {2016 International Joint Conference on Neural Networks (IJCNN)},
volume = {},
pages = {2484-2491},
doi = {10.1109/IJCNN.2016.7727508},
arxivid = {1606.07150},
}

@article{da7076ba8e97a755d988e2dfe334ea45aa8a0f36,
title = {Fest: A feature extraction and selection tool for Android malware detection},
year = {2015},
url = {https://www.semanticscholar.org/paper/da7076ba8e97a755d988e2dfe334ea45aa8a0f36},
abstract = {Android has become one of the most popular mobile operating systems because of numerous applications (apps) it provides. However, Android malware downloaded from third-party markets threatens users' privacy, and most of them remain undetected because of the lack of efficient and accurate detecting techniques. Prior efforts on Android malware detection attempted to build precise classification models by manually choosing features, and few of them has used any feature selection algorithms to help pick typical features. In this paper, we present Feature Extraction and Selection Tool (Fest), a feature-based machine learning approach for malware detection. We first implement a feature extraction tool, AppExtractor, which is designed to extract features, such as permissions or APIs, according to the predefined rules. Then we propose a feature selection algorithm, FrequenSel. Unlike existing selection algorithms which pick features by calculating their importance, FrequenSel selects features by finding the difference their frequencies between malware and benign apps, because features which are frequently used in malware and rarely used in benign apps are more important to distinguish malware from benign apps. In experiments, we evaluate our approach with 7972 apps, and the results show that Fest gets nearly 98% accuracy and recall, with only 2% false alarms. Moreover, Fest only takes 6.5s to analyze an app on a common PC, which is very time-efficient for malware detection in Android markets.},
author = {Kai Zhao and Dafang Zhang and Xin Su and Wenjia Li},
journal = {2015 IEEE Symposium on Computers and Communication (ISCC)},
volume = {},
pages = {714-720},
doi = {10.1109/ISCC.2015.7405598},
}

@article{3777037685ff56317f59dccdc8b4624847accb92,
title = {Deep4MalDroid: A Deep Learning Framework for Android Malware Detection Based on Linux Kernel System Call Graphs},
year = {2016},
url = {https://www.semanticscholar.org/paper/3777037685ff56317f59dccdc8b4624847accb92},
abstract = {With explosive growth of Android malware and due to its damage to smart phone users (e.g., stealing user credentials, resource abuse), Android malware detection is one of the cyber security topics that are of great interests. Currently, the most significant line of defense against Android malware is anti-malware software products, such as Norton, Lookout, and Comodo Mobile Security, which mainly use the signature-based method to recognize threats. However, malware attackers increasingly employ techniques such as repackaging and obfuscation to bypass signatures and defeat attempts to analyze their inner mechanisms. The increasing sophistication of Android malware calls for new defensive techniques that are harder to evade, and are capable of protecting users against novel threats. In this paper, we propose a novel dynamic analysis method named Component Traversal that can automatically execute the code routines of each given Android application (app) as completely as possible. Based on the extracted Linux kernel system calls, we further construct the weighted directed graphs and then apply a deep learning framework resting on the graph based features for newly unknown Android malware detection. A comprehensive experimental study on a real sample collection from Comodo Cloud Security Center is performed to compare various malware detection approaches. Promising experimental results demonstrate that our proposed method outperforms other alternative Android malware detection techniques. Our developed system Deep4MalDroid has also been integrated into a commercial Android anti-malware software.},
author = {Shifu Hou and Aaron Saas and Lifei Chen and Yanfang Ye},
journal = {2016 IEEE/WIC/ACM International Conference on Web Intelligence Workshops (WIW)},
volume = {},
pages = {104-111},
doi = {10.1109/WIW.2016.040},
}

@article{eb49737539bc0e3dcebff15f8de3779e4f5b5a6c,
title = {A Multimodal Deep Learning Method for Android Malware Detection Using Various Features},
year = {2019},
url = {https://www.semanticscholar.org/paper/eb49737539bc0e3dcebff15f8de3779e4f5b5a6c},
abstract = {With the widespread use of smartphones, the number of malware has been increasing exponentially. Among smart devices, android devices are the most targeted devices by malware because of their high popularity. This paper proposes a novel framework for android malware detection. Our framework uses various kinds of features to reflect the properties of android applications from various aspects, and the features are refined using our existence-based or similarity-based feature extraction method for effective feature representation on malware detection. Besides, a multimodal deep learning method is proposed to be used as a malware detection model. This paper is the first study of the multimodal deep learning to be used in the android malware detection. With our detection model, it was possible to maximize the benefits of encompassing multiple feature types. To evaluate the performance, we carried out various experiments with a total of 41 260 samples. We compared the accuracy of our model with that of other deep neural network models. Furthermore, we evaluated our framework in various aspects including the efficiency in model updates, the usefulness of diverse features, and our feature representation method. In addition, we compared the performance of our framework with those of other existing methods including deep learning-based methods.},
author = {TaeGuen Kim and Boojoong Kang and Mina Rho and S. Sezer and E. Im},
journal = {IEEE Transactions on Information Forensics and Security},
volume = {14},
pages = {773-788},
doi = {10.1109/TIFS.2018.2866319},
}

@article{ff0bb0b5b1a8307c15228dbbb4dc6a8e6322fc3e,
title = {SafeDroid: A Distributed Malware Detection Service for Android},
year = {2016},
url = {https://www.semanticscholar.org/paper/ff0bb0b5b1a8307c15228dbbb4dc6a8e6322fc3e},
abstract = {Android platform has become a primary target for malware. In this paper we present SafeDroid, an open source distributed service to detect malicious apps on Android by combining static analysis and machine learning techniques. It is composed by three micro-services, working together, combining static analysis and machine learning techniques. SafeDroid has been designed as a user friendly service, providing detailed feedback in case of malware detection. The detection service is optimized to be lightweight and easily updated. The feature set on which the micro-service of detection relies on on has been selected and optimized in order to focus only on the most distinguishing characteristics of the Android apps. We present a prototype to show the effectiveness of the detection mechanism service and the feasibility of the approach.},
author = {Rohit Goyal and A. Spognardi and N. Dragoni and M. Argyriou},
journal = {2016 IEEE 9th International Conference on Service-Oriented Computing and Applications (SOCA)},
volume = {},
pages = {59-66},
doi = {10.1109/SOCA.2016.14},
}

@article{0ddeb8ec365dae1fc002dd545955c15f6e6cc2a7,
title = {A new mobile botnet classification based on permission and API calls},
year = {2017},
url = {https://www.semanticscholar.org/paper/0ddeb8ec365dae1fc002dd545955c15f6e6cc2a7},
abstract = {Currently, mobile botnet attacks have shifted from computers to smartphones due to its functionality, ease to exploit, and based on financial intention. Mostly, it attacks Android due to its popularity and high usage among end users. Every day, more and more malicious mobile applications (apps) with the botnet capability have been developed to exploit end users' smartphones. Therefore, this paper presents a new mobile botnet classification based on permission and Application Programming Interface (API) calls in the smartphone. This classification is developed using static analysis in a controlled lab environment and the Drebin dataset is used as the training dataset. 800 apps from the Google Play Store have been chosen randomly to test the proposed classification. As a result, 16 permissions and 31 API calls that are most related with mobile botnet have been extracted using feature selection and later classified and tested using machine learning algorithms. The experimental result shows that the Random Forest Algorithm has achieved the highest detection accuracy of 99.4% with the lowest false positive rate of 16.1% as compared to other machine learning algorithms. This new classification can be used as the input for mobile botnet detection for future work, especially for financial matters.},
author = {Muhammad Yusof and M. Saudi and F. Ridzuan},
journal = {2017 Seventh International Conference on Emerging Security Technologies (EST)},
volume = {},
pages = {122-127},
doi = {10.1109/EST.2017.8090410},
}

@article{e9a706d8c882fbd6e3b50c87ee4be9d760d89074,
title = {MADAM: Effective and Efficient Behavior-based Android Malware Detection and Prevention},
year = {2018},
url = {https://www.semanticscholar.org/paper/e9a706d8c882fbd6e3b50c87ee4be9d760d89074},
abstract = {Android users are constantly threatened by an increasing number of malicious applications (apps), generically called malware. Malware constitutes a serious threat to user privacy, money, device and file integrity. In this paper we note that, by studying their actions, we can classify malware into a small number of behavioral classes, each of which performs a limited set of misbehaviors that characterize them. These misbehaviors can be defined by monitoring features belonging to different Android levels. In this paper we present MADAM, a novel host-based malware detection system for Android devices which simultaneously analyzes and correlates features at four levels: kernel, application, user and package, to detect and stop malicious behaviors. MADAM has been specifically designed to take into account those behaviors that are characteristics of almost every real malware which can be found in the wild. MADAM detects and effectively blocks more than 96 percent of malicious apps, which come from three large datasets with about 2,800 apps, by exploiting the cooperation of two parallel classifiers and a behavioral signature-based detector. Extensive experiments, which also includes the analysis of a testbed of 9,804 genuine apps, have been conducted to show the low false alarm rate, the negligible performance overhead and limited battery consumption.},
author = {A. Saracino and D. Sgandurra and G. Dini and F. Martinelli},
journal = {IEEE Transactions on Dependable and Secure Computing},
volume = {15},
pages = {83-97},
doi = {10.1109/TDSC.2016.2536605},
}

@article{1b3d633599d435d1a701b1d9fb9df4c60a3e342f,
title = {Trust, Privacy and Security in Digital Business},
year = {2015},
url = {https://www.semanticscholar.org/paper/1b3d633599d435d1a701b1d9fb9df4c60a3e342f},
abstract = {Trust, Privacy and Security in Digital Business : 12th International Conference, TrustBus 2015, Valencia, Spain, September 1-2, 2015, Proceedings},
author = {S. Fischer-Hübner and C. Lambrinoudakis and L. Javier},
doi = {10.1007/978-3-319-22906-5},
}

@article{bfbdf36d50066c39dedf688150d63ba4b84d7e52,
title = {DroidDetector: Android Malware Characterization and Detection Using Deep Learning},
year = {2016},
url = {https://www.semanticscholar.org/paper/bfbdf36d50066c39dedf688150d63ba4b84d7e52},
abstract = {Smartphones and mobile tablets are rapidly becoming indispensable in daily life. Android has been the most popular mobile operating system since 2012. However, owing to the open nature of Android, countless malwares are hidden in a large number of benign apps in Android markets that seriously threaten Android security. Deep learning is a new area of machine learning research that has gained increasing attention in artificial intelligence. In this study, we propose to associate the features from the static analysis with features from dynamic analysis of Android apps and characterize malware using deep learning techniques. We implement an online deep-learning-based Android malware detection engine (DroidDetector) that can automatically detect whether an app is a malware or not. With thousands of Android apps, we thoroughly test DroidDetector and perform an indepth analysis on the features that deep learning essentially exploits to characterize malware. The results show that deep learning is suitable for characterizing Android malware and especially effective with the availability of more training data. DroidDetector can achieve 96.76% detection accuracy, which outperforms traditional machine learning techniques. An evaluation of ten popular anti-virus softwares demonstrates the urgency of advancing our capabilities in Android malware detection.},
author = {Zhenlong Yuan and Yongqiang Lu and Y. Xue},
journal = {Tsinghua Science & Technology},
volume = {21},
pages = {114-123},
doi = {10.1109/TST.2016.7399288},
}

@article{b18b6ed1484958ceed7fa1244554b5a96a04fedb,
title = {Ultra-Lightweight Malware Detection of Android Using 2-Level Machine Learning},
year = {2016},
url = {https://www.semanticscholar.org/paper/b18b6ed1484958ceed7fa1244554b5a96a04fedb},
abstract = {As Android becoming the most popular smart phone operating system, malicious applications running on the Android platform appears very frequently and poses the major threat to the security of Android. Considering the resources of smart phone are severely limited, a stable, simple and quick malware detection method for Android is indispensable. In this paper, we propose an ultra-lightweight malware detection method which is able to detect unknown malicious Android applications with limited resources. Firstly, a few features are extracted and divided into three sets for every application. Then, these three feature sets are embedded in the corresponding joint vector spaces and we can get apps's feature vectors. After that, feature vectors of every vector space are classified using a machine learning algorithm. Finally, the three classification results are considered as a group and embedded in a new space and classified again. We evaluate our detection with 3427 malicious samples and 1550 benign applications. Experimental results show that our detection approach has a stable performance that the detection accuracy (true-positive rate) is always higher than 98% and the detection procedure costs only 30ms per sample.},
author = {Li Ma and Yuexiang Yang and Xiaolei Wang and Jie He},
journal = {2016 3rd International Conference on Information Science and Control Engineering (ICISCE)},
volume = {},
pages = {729-733},
doi = {10.1109/ICISCE.2016.161},
}

@article{c2366ebaa71e4ae605f4ac45bbf621924fb743ce,
title = {An Effective Approach to Measuring and Assessing the Risk of Android Application},
year = {2015},
url = {https://www.semanticscholar.org/paper/c2366ebaa71e4ae605f4ac45bbf621924fb743ce},
abstract = {As the most popular platform, Android dominates the mobile device market. In order to enrich the functions of the phone and facilitate the utilization of users, more and more Android applications have been developed. Unfortunately, a greatly increasing amount of malware targeting the Android platform mingle with the numerous benign applications and hide in almost every market, even the official market Google Play. Therefore, it is a pressing concern about how to measure and assess the risk of such apps. In this paper, we propose a novel approach to deal with this problem. First of all, through the empirical analysis with market-scale dataset, we verify the following fact: for a set of benign applications in the same category, the type and number of permissions they request are similar and consistent in general. Hence, for the benign applications in each category, we can construct a standard permission vector model, which can be used as a baseline to measure and assess the risk of applications in the category. For a downloaded app, we extract its requested permissions to form a permission vector, whose deviation from the baseline can be calculated by employing Euclidean distance and weighted Euclidean distance. The deviation can be used as metric to measure and assess the risk of the app. Finally, an experiment on real-world dataset, consisting of 7737 market apps and 1260 malware samples, is conducted to evaluate our method. The empirical result validates the effectiveness of our approach to help users understand the risk when they decide to install an app.},
author = {Huikang Hao and Zhoujun Li and Haibo Yu},
journal = {2015 International Symposium on Theoretical Aspects of Software Engineering},
volume = {},
pages = {31-38},
doi = {10.1109/TASE.2015.16},
}

@article{e627ecac577189805e40554ccdf0fbbe8d026f64,
title = {DroidDeepLearner: Identifying Android malware using deep learning},
year = {2016},
url = {https://www.semanticscholar.org/paper/e627ecac577189805e40554ccdf0fbbe8d026f64},
abstract = {With the proliferation of Android apps, encounters with malicious apps (malware) by mobile users are on the rise as vulnerabilities in the Android platform system are exploited by malware authors to access personal or sensitive information with ill intentions, often with financial gain in mind. To uphold security integrity and maintain user confidence, various approaches have been studied in the field of malware detection. As malware become more capable at hiding its malicious intent through the use of code obfuscation, it becomes imperative for malware detection techniques to keep up with the pace of malware changes. Currently, most of the existing malware detection approaches for Android platform use semantic pattern matching, which is highly effective but is limited to what the computers have encountered before. However, their performance degrades significantly when it comes to identifying malicious apps they have never tackled before. In this paper, we propose DroidDeepLearner, an Android malware characteri-zation and identification approach that uses deep learning algorithm to address the current need for malware detection to become more autonomous at learning to solve problems with less human intervention. Experimental results have shown that the DroidDeepLearner approach achieves good performance when compared to the existing widely used malware detection approaches.},
author = {Zi Wang and J. Cai and Sihua Cheng and Wenjia Li},
journal = {2016 IEEE 37th Sarnoff Symposium},
volume = {},
pages = {160-165},
doi = {10.1109/SARNOF.2016.7846747},
}

@article{569811bec156a37422d50cbd0db548e780892e16,
title = {Machine Learning Based Hybrid Behavior Models for Android Malware Analysis},
year = {2015},
url = {https://www.semanticscholar.org/paper/569811bec156a37422d50cbd0db548e780892e16},
abstract = {Malware analysis on the Android platform has been an important issue as the platform became prevalent. The paper proposes a malware detection approach based on static analysis and machine learning techniques. By conducting SVM training on two different feature sets, malicious-preferred features and normal-preferred features, we built a hybrid-model classifier to improve the detection accuracy. With the consideration of normal behavior features, the ability of detecting unknown malwares can be improved. The experiments show that the accuracy is as high as 96.69% in predicting unknown applications. Further, the proposed approach can be applied to make confident decisions on labeling unknown applications. The experiment results show that the proposed hybrid model classifier can label 79.4% applications without false positive and false negative occurred in the labeling process.},
author = {Hsin-Yu Chuang and Sheng-De Wang},
journal = {2015 IEEE International Conference on Software Quality, Reliability and Security},
volume = {},
pages = {201-206},
doi = {10.1109/QRS.2015.37},
}

@article{649bb319a0afb0214297ccff4b852f6b018ec79a,
title = {Comprehensive Behavior Profiling for Proactive Android Malware Detection},
year = {2014},
url = {https://www.semanticscholar.org/paper/649bb319a0afb0214297ccff4b852f6b018ec79a},
abstract = {We present a new method of screening for malicious Android applications that uses two types of information about the application: the permissions that the application requests in its installation manifest and a metric called percentage of valid call sites (PVCS). PVCS measures the riskiness of the application based on a data flow graph. The information is used with machine learning algorithms to classify previously unseen applications as malicious or benign with a high degree of accuracy. Our classifier outperforms the previous state of the art by a significant margin, with particularly low false positive rates. Furthermore, the classifier evaluation is performed on malware families that were not used in the training phase, simulating the accuracy of the classifier on malware yet to be developed. We found that our PVCS metric and the SEND_SMS permission are the specific pieces of information that are most useful to the classifier.},
author = {B. Wolfe and Karim O. Elish and D. Yao},
doi = {10.1007/978-3-319-13257-0_19},
}

@article{95707d8e38241fddb375caf5354313c034e28e19,
title = {Deep Android Malware Detection},
year = {2017},
url = {https://semanticscholar.org/paper/95707d8e38241fddb375caf5354313c034e28e19},
abstract = {In this paper, we propose a novel android malware detection system that uses a deep convolutional neural network (CNN). Malware classification is performed based on static analysis of the raw opcode sequence from a disassembled program. Features indicative of malware are automatically learned by the network from the raw opcode sequence thus removing the need for hand-engineered malware features. The training pipeline of our proposed system is much simpler than existing n-gram based malware detection methods, as the network is trained end-to-end to jointly learn appropriate features and to perform classification, thus removing the need to explicitly enumerate millions of n-grams during training. The network design also allows the use of long n-gram like features, not computationally feasible with existing methods. Once trained, the network can be efficiently executed on a GPU, allowing a very large number of files to be scanned quickly.},
author = {Niall  McLaughlin and Jesús Martínez del Rincón and BooJoong  Kang and Suleiman Y. Yerima and Paul C. Miller and Sakir  Sezer and Yeganeh  Safaei and Erik  Trickel and Ziming  Zhao and Adam  Doupé and Gail-Joon  Ahn},
journal = {Proceedings of the Seventh ACM on Conference on Data and Application Security and Privacy},
volume = {},
pages = {},
doi = {10.1145/3029806.3029823},
}

@article{86bda2dfb4d5dfcc5563b3dbc4604c67edb4b273,
title = {SAFEDroid: Using Structural Features for Detecting Android Malwares},
year = {2017},
url = {https://www.semanticscholar.org/paper/86bda2dfb4d5dfcc5563b3dbc4604c67edb4b273},
abstract = {Mobile devices have become a popular target for attackers, whose aims are to harm the devices, illegally obtain personal information and ultimately to reap financial benefit. In order to detect such malicious attempts, security solutions based on static analysis are mainly preferred due to resource-constraints of these devices. However, in general, static analysis-based solutions are not very effective against new mobile malwares and new variants of existing mobile malwares appear on a daily basis. In this study, new features for static analysis are investigated in order to detect mobile malwares. While studies found in the literature mostly employ API calls and permissions, this current study explores some novel structural features. Results show the relative effectiveness of these features on malware detection. Furthermore, it is shown that these features detect new malwares better than solely applying API-based features.},
author = {Sevil Sen and A. Aysan and John A. Clark},
doi = {10.1007/978-3-319-78816-6_18},
}

@article{04ac1e432969b19000abd13a8fd01792792c280c,
title = {Android malware detection a survey},
year = {2017},
url = {https://www.semanticscholar.org/paper/04ac1e432969b19000abd13a8fd01792792c280c},
abstract = {The popularity of Android mobile devices has gone up in our lives and are being used for handling a lot of our personal and confidential information. Hence t hey are now an ideal target for attackers. Android based smart-phone users can download a lot of free applications from Android Application Market/Play Store. These downloaded apps some-times contain malware applications that can take possession of private information from users. Apps in queue for launching on Play Store generally undergo an automatic security test where crawl operations like typing, tapping and swiping are performed periodically and analysis results are generated. In this survey paper, we aim to briefly discuss the different techniques used in Android malware detection and highlight their advantages and limitations.},
author = {Raima Zachariah and K. Akash and Mohammed Sajmal Yousef and A. Chacko},
journal = {2017 IEEE International Conference on Circuits and Systems (ICCS)},
volume = {},
pages = {238-244},
doi = {10.1109/ICCS1.2017.8325997},
}

@article{94f8eddceb0f153721173e7e8eac28f0836ad17e,
title = {Android Malware Detection in Large Dataset: Smart Approach},
year = {2020},
url = {https://www.semanticscholar.org/paper/94f8eddceb0f153721173e7e8eac28f0836ad17e},
abstract = {As the most widely used operating system for smartphones, Android is still growing, with many applications deployed in the mobile space, as well as other Android-based Internet-of-Things devices. A major side effect of the unprotected usage of such apps is the security loophole allowing app developers to access users’ critical data on their devices. Hence, the lack of modern, precise validation of Android apps necessitates a new technique for malware detection. Proposed is a new smart mechanism that utilizes several machine learning models to analyze Android app behavior. More than 100 thousand Android application packages (APKs) containing more than 80,000 malware variants from 179 different families (in addition to benign Android apps) were collected. For added robustness, the model was trained with various malware found between 2006 and 2018. In consideration of the utilized app-dataset size, our smart model is poised as a very fast processing method for vast amounts of apps, unimplemented by other works in the field. The proposed smart Android malware detector obtained a very encouraging accuracy, ranging between 95% and 97%, on average for around 100 thousand analyzed APKs.},
author = {Qudrat E. Alahy and Md. Naseef-Ur-Rahman Chowdhury and H. Soliman and Moshrefa Sultana Chaity and Ahshanul Haque},
doi = {10.1007/978-3-030-39445-5_58},
}

@article{dc65de1ce43f610c060d1284255106db1672ab60,
title = {Investigating the android intents and permissions for malware detection},
year = {2014},
url = {https://www.semanticscholar.org/paper/dc65de1ce43f610c060d1284255106db1672ab60},
abstract = {Mobile phones are mastering our day to day scheduling, entertainment, information and almost every aspect of life. With the increasing human dependence on smart phones, threats against these devices have also increased exponentially. Almost all the mobile apps are playing with the mobile user's privacy besides the targeted actions by the malicious apps. Android applications use permissions to use different features and resources of mobile device along with the intents to launch different activities. Various aspects of permission framework have been studied but sufficient attention has not been given to the intent framework. This work is first of its kind which is investigating the combined effects of permissions and intent filters to distinguish between the malware and benign apps. This paper proposes a novel approach to identify the malicious apps by analyzing the permission and intent patterns of android apps. This approach is supplemented with the machine learning algorithms for further classification of apps. Performance of proposed approach has been validated by applying the technique to the available malicious and benign samples collected from a number of sources.},
author = {Fauzia Idrees and M. Rajarajan},
journal = {2014 IEEE 10th International Conference on Wireless and Mobile Computing, Networking and Communications (WiMob)},
volume = {},
pages = {354-358},
doi = {10.1109/WiMOB.2014.6962194},
}

@article{edcd2020bad8d5d30dbdad2e4e18110c7a855422,
title = {On the Efficacy of Static Features to Detect Malicious Applications in Android},
year = {2015},
url = {https://www.semanticscholar.org/paper/edcd2020bad8d5d30dbdad2e4e18110c7a855422},
abstract = {The Android OS environment is today increasingly targeted by malwares. Traditional signature based detection algorithms are not able to provide complete protection especially against ad-hoc created malwares. In this paper, we present a feasibility analysis for enhancing the detection accuracy on Android malware for approaches relying on machine learning classifiers and Android applications’ static features. Specifically, our study builds on the basis of machine learning classifiers operating over different fusion rules on Android applications’ permissions and APIs. We analyse the performance of different configurations in terms of false alarms tradeoff. Results demonstrate that malware detection accuracy could be enhanced in case that detection approaches introduce additional fusion rules e.g., squared average score over the examined features.},
author = {D. Geneiatakis and R. Satta and I. N. Fovino and R. Neisse},
doi = {10.1007/978-3-319-22906-5_7},
}

@article{d58a645c9fbfb5dfa1e8903bff4a8a7d9c6f8261,
title = {The Concept of Attack Scenarios and Its Applications in Android Malware Detection},
year = {2016},
url = {https://www.semanticscholar.org/paper/d58a645c9fbfb5dfa1e8903bff4a8a7d9c6f8261},
abstract = {In this paper, we propose the concept of attack scenarios, which can be learned and selected from a set of malicious applications and described by sets of Android APIs, to characterize Android malware. Because of its characteristics that produce almost no false-positive, attack scenarios can be used as a pre-filter for machine-learning based detectors to enhance the detection performance at low false-positive rate. By combining different machine learning techniques, we demonstrate that the proposed approach can increase the detection rates. To evaluate our approach, we analyze 20,914 Android application containing 3,145 malicious samples on two different machine learning techniques, KNN and SVM. The experiment results show that the proposed approach can raise the detection rate up to 95.9% malware at 1% false positive rate and 95.9% malware at 0.1% false positive rate respectively.},
author = {Yu-Chen Chang and Sheng-De Wang},
journal = {2016 IEEE 18th International Conference on High Performance Computing and Communications; IEEE 14th International Conference on Smart City; IEEE 2nd International Conference on Data Science and Systems (HPCC/SmartCity/DSS)},
volume = {},
pages = {1485-1492},
doi = {10.1109/HPCC-SmartCity-DSS.2016.0211},
}

@article{63ed7fbe15231b98938d34093c1ca87a784a772b,
title = {Identification of malicious android app using manifest and opcode features},
year = {2017},
url = {https://www.semanticscholar.org/paper/63ed7fbe15231b98938d34093c1ca87a784a772b},
abstract = {In this paper, we propose a statistical approach for smartphone malware detection. A set of features such as hardware, permission, application components, filtered intents, opcodes and strings are extracted from the samples to form a vector space model. Feature selection methods such as Entropy based Category Coverage Difference (ECCD) and Weighted Mutual Information (WI) are used to choose the prominent features. The performance of the system is analyzed using classifiers, Random Forest, Rotation Forest and Support Vector Machine (SVM). The system was evaluated on individual models as well as Meta feature space model for both malware and benign features. It was observed that the meta feature space model with malware features provide the best results for both feature selection. For ECCD, Random Forest classifier performs better [Dataset 1—0.972, Dataset 2—0.976 and Dataset 3—0.969] whereas in the case of WI, SVM gives highest F-measure [Dataset 1—0.993, Dataset 2—0.994 and Dataset 3—0.992]. From the overall analysis on the system, we conclude that the malware model outperforms it’s benign counterpart and also that WI is a better feature selection technique compared to ECCD.},
author = {V. VarshaM. and P. Vinod and K. Dhanya},
journal = {Journal of Computer Virology and Hacking Techniques},
volume = {13},
pages = {125-138},
doi = {10.1007/s11416-016-0277-z},
}
