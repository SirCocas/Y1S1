@article{fae437495416846ffb3b66a6f8ab5c6db7d9ae5f,
title = {Behavioral detection of malware on mobile handsets},
year = {2008},
url = {https://semanticscholar.org/paper/fae437495416846ffb3b66a6f8ab5c6db7d9ae5f},
abstract = {A novel behavioral detection framework is proposed to detect mobile worms, viruses and Trojans, instead of the signature-based solutions currently available for use in mobile devices. First, we propose an efficient representation of malware behaviors based on a key observation that the logical ordering of an application's actions over time often reveals the malicious intent even when each action alone may appear harmless. Then, we generate a database of malicious behavior signatures by studying more than 25 distinct families of mobile viruses and worms targeting the Symbian OS - the most widely-deployed handset OS - and their variants. Next, we propose a two-stage mapping technique that constructs these signatures at run-time from the monitored system events and API calls in Symbian OS. We discriminate the malicious behavior of malware from the normal behavior of applications by training a classifier based on Support Vector Machines (SVMs). Our evaluation on both simulated and real-world malware samples indicates that behavioral detection can identify current mobile viruses and worms with more than 96% accuracy. We also find that the time and resource overheads of constructing the behavior signatures from low-level API calls are acceptably low for their deployment in mobile devices.},
author = {Abhijit Bose and Xin Hu and Kang G. Shin and Taejoon Park},
}

@article{ebcc6bfb9c7f3f453114edd57429971984a043db,
title = {Monitoring Smartphones for Anomaly Detection},
year = {2009},
url = {https://semanticscholar.org/paper/ebcc6bfb9c7f3f453114edd57429971984a043db},
abstract = {In this paper we demonstrate how to monitor a smartphone running Symbian operating system and Windows Mobile in order to extract features for anomaly detection. These features are sent to a remote server because running a complex intrusion detection system on this kind of mobile device still is not feasible due to capability and hardware limitations. We give examples on how to compute relevant features and introduce the top ten applications used by mobile phone users based on a study in 2005. The usage of these applications is recorded by a monitoring client and visualized. Additionally, monitoring results of public and self-written malwares are shown. For improving monitoring client performance, Principal Component Analysis was applied which lead to a decrease of about 80% of the amount of monitored features.},
author = {Aubrey-Derrick Schmidt and Frank Peters and Florian Lamour and Christian Scheel and Seyit Ahmet Çamtepe and Sahin Albayrak},
}

@article{f59dd54b9cfc46f73035ce40023c366a5e0b1c4e,
title = {Detecting energy-greedy anomalies and mobile malware variants},
year = {2008},
url = {https://semanticscholar.org/paper/f59dd54b9cfc46f73035ce40023c366a5e0b1c4e},
abstract = {Mobile users of computation and communication services have been rapidly adopting battery-powered mobile handhelds, such as PocketPCs and SmartPhones, for their work. However, the limited battery-lifetime of these devices restricts their portability and applicability, and this weakness can be exacerbated by mobile malware targeting depletion of battery energy. Such malware are usually difficult to detect and prevent, and frequent outbreaks of new malware variants also reduce the effectiveness of commonly-seen signature-based detection. To alleviate these problems, we propose a power-aware malware-detection framework that monitors, detects, and analyzes previously unknown energy-depletion threats. The framework is composed of (1) a power monitor which collects power samples and builds a power consumption history from the collected samples, and (2) a data analyzer which generates a power signature from the constructed history. To generate a power signature, simple and effective noise-filtering and data-compression are applied, thus reducing the detection overhead. Similarities between power signatures are measured by the χ2-distance, reducing both false-positive and false-negative detection rates. According to our experimental results on an HP iPAQ running a Windows Mobile OS, the proposed framework achieves significant (up to 95%) storage-savings without losing the detection accuracy, and a 99% true-positive rate in classifying mobile malware.},
author = {Hahnsang Kim and Joshua Smith and Kang G. Shin},
}

@article{a7e8910b74715175cb20d9a08d34b3541060076b,
title = {On lightweight mobile phone application certification},
year = {2009},
url = {https://semanticscholar.org/paper/a7e8910b74715175cb20d9a08d34b3541060076b},
abstract = {Users have begun downloading an increasingly large number of mobile phone applications in response to advancements in handsets and wireless networks. The increased number of applications results in a greater chance of installing Trojans and similar malware. In this paper, we propose the Kirin security service for Android, which performs lightweight certification of applications to mitigate malware at install time. Kirin certification uses security rules, which are templates designed to conservatively match undesirable properties in security configuration bundled with applications. We use a variant of security requirements engineering techniques to perform an in-depth security analysis of Android to produce a set of rules that match malware characteristics. In a sample of 311 of the most popular applications downloaded from the official Android Market, Kirin and our rules found 5 applications that implement dangerous functionality and therefore should be installed with extreme caution. Upon close inspection, another five applications asserted dangerous rights, but were within the scope of reasonable functional needs. These results indicate that security configuration bundled with Android applications provides practical means of detecting malware.},
author = {William Enck and Machigar Ongtang and Patrick D. McDaniel},
}

@article{48322738d25efe1b1d8f8426320367f0c8ab3b2d,
title = {TaintDroid: An Information-Flow Tracking System for Realtime Privacy Monitoring on Smartphones},
year = {2014},
url = {https://semanticscholar.org/paper/48322738d25efe1b1d8f8426320367f0c8ab3b2d},
abstract = {Today’s smartphone operating systems frequently fail to provide users with visibility into how third-party applications collect and share their private data. We address these shortcomings with TaintDroid, an efficient, system-wide dynamic taint tracking and analysis system capable of simultaneously tracking multiple sources of sensitive data. TaintDroid enables realtime analysis by leveraging Android’s virtualized execution environment. TaintDroid incurs only 32% performance overhead on a CPU-bound microbenchmark and imposes negligible overhead on interactive third-party applications. Using TaintDroid to monitor the behavior of 30 popular third-party Android applications, in our 2010 study we found 20 applications potentially misused users’ private information; so did a similar fraction of the tested applications in our 2012 study. Monitoring the flow of privacy-sensitive data with TaintDroid provides valuable input for smartphone users and security service firms seeking to identify misbehaving applications.},
author = {William Enck and Peter Gilbert and Byung-Gon Chun and Landon P. Cox and Jaeyeon Jung and Patrick D. McDaniel and Anmol Sheth},
}

@article{3037786ff9ac786712731162596a5023ce1e23e3,
title = {SmartSiren: virus detection and alert for smartphones},
year = {2007},
url = {https://semanticscholar.org/paper/3037786ff9ac786712731162596a5023ce1e23e3},
abstract = {Smartphones have recently become increasingly popular because they provide "all-in-one" convenience by integrating traditional mobile phones with handheld computing devices. However, the flexibility of running third-party softwares also leaves the smartphones open to malicious viruses. In fact, hundreds of smartphone viruses have emerged in the past two years, which can quickly spread through various means such as SMS/MMS, Bluetooth and traditional IP-based applications. Our own implementations of two proof-of-concept viruses on Windows Mobile have confirmed the vulnerability of this popular smartphone platform.
 In this paper, we present SmartSiren, a collaborative virusdetection and alert system for smartphones. In order to detect viruses, SmartSiren collects the communication activity information from the smartphones, and performs joint analysis to detect both single-device and system-wide abnormal behaviors. We use a proxy-based architecture to offload the processing burden from resource-constrained smartphones and simplify the collaboration among smartphones. When a potential virus is detected, the proxy quarantines the out-break by sending targeted alerts to those immediately threatened smartphones. We have demonstrated the feasibility of SmartSiren through implementations on a Dopod 577w smartphone, and evaluated its effectiveness using simulations driven by 3-week SMS traces from a national cellular carrier. Our results show that SmartSiren can effectively prevent wide-area virus outbreaks with affordable overhead.},
author = {Jerry Cheng and Starsky H. Y. Wong and H. T. Yang and Songwu Lu},
}

@article{3f1ef458230dfa32a2bd39bc6beae943a942ed4b,
title = {Mobile Device Profiling and Intrusion Detection Using Smart Batteries},
year = {2008},
url = {https://semanticscholar.org/paper/3f1ef458230dfa32a2bd39bc6beae943a942ed4b},
abstract = {This paper introduces capabilities developed for a battery-sensing intrusion protection system (B-SIPS) for mobile computers, which alerts when abnormal current changes are detected. The intrusion detection system's (IDS's) IEEE 802.15.1 (Bluetooth) and 802.11 (Wi-Fi) capabilities are enhanced with iterative safe process checking, wireless connection determination, and an automated intrusion protection disconnect ability. The correlation intrusion detection engine (CIDE) provides power profiling for mobile devices and a correlated view of B-SIPS and snort alerts. An examination of smart battery drain times was conducted to ascertain the optimal transmission rate for the B-SIPS client. A 10 second reporting rate was used to assess 9 device types, which were then compared with their corresponding baseline battery lifetime. Lastly, an extensive usability study was conducted to improve the B-SIPS client and CIDE features. The 31 expert participants provided feedback and data useful for validating the system's viability as a complementary IDS for mobile devices.},
author = {Timothy Buennemeyer and Theresa M. Nelson and Lee M. Clagett and John Paul Dunning and Randy C. Marchany and Joseph G. Tront},
}

@article{662731cbf1afa6f3bfab7c4f6f6287f5c50b4477,
title = {Battery-based intrusion detection},
year = {2004},
url = {https://semanticscholar.org/paper/662731cbf1afa6f3bfab7c4f6f6287f5c50b4477},
abstract = {This paper proposes an early warning system via a host-based form of intrusion detection that can alert security administrators to protect their corporate network(s). This innovative technique operates through the implementation of battery-based intrusion detection (B-bid) on mobile devices by correlating attacks with their impact on device power consumption using a rules-based host intrusion detection engine (HIDE). HIDE monitors power behavior to detect potential intrusions by noting irregularities of power consumption.},
author = {Grant A. Jacoby and IV NathanielJ.Davis},
}

@article{e4d18c5bf092895010e8bddfb2c1db6902624e7e,
title = {Towards an intrusion detection system for battery exhaustion attacks on mobile computing devices},
year = {2005},
url = {https://semanticscholar.org/paper/e4d18c5bf092895010e8bddfb2c1db6902624e7e},
abstract = {Mobile computers are subject to a unique form of denial of service attack known as a battery exhaustion attack, in which an attacker attempts to rapidly drain the battery of the device. In this paper we present our first steps in the design of an intrusion detection system for these attacks, a system that takes into account the performance, energy, and memory constraints of mobile computing devices. This intrusion detection system uses several parameters, such as CPU load and disk accesses, to estimate the power consumption using a linear regression model, allowing us to find the energy used on a per process basis, and thus identifying processes that are potentially battery exhaustion attacks.},
author = {Daniel C. Nash and Thomas L. Martin and Dong S. Ha and Michael S. Hsiao},
}

@article{d13dcf524d7a96255b8c89db9db77c408190f079,
title = {Crowdroid: behavior-based malware detection system for Android},
year = {2011},
url = {https://semanticscholar.org/paper/d13dcf524d7a96255b8c89db9db77c408190f079},
abstract = {The sharp increase in the number of smartphones on the market, with the Android platform posed to becoming a market leader makes the need for malware analysis on this platform an urgent issue.
 In this paper we capitalize on earlier approaches for dynamic analysis of application behavior as a means for detecting malware in the Android platform. The detector is embedded in a overall framework for collection of traces from an unlimited number of real users based on crowdsourcing. Our framework has been demonstrated by analyzing the data collected in the central server using two types of data sets: those from artificial malware created for test purposes, and those from real malware found in the wild. The method is shown to be an effective means of isolating the malware and alerting the users of a downloaded malware. This shows the potential for avoiding the spreading of a detected malware to a larger community.},
author = {Iker Burguera and Urko Zurutuza and Simin Nadjm-Tehrani},
}
